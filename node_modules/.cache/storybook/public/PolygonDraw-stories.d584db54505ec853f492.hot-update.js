"use strict";
self["webpackHotUpdate_freenow_react_polygon_editor"]("PolygonDraw-stories",{

/***/ "./src/ActionBar/EdgeConstraintsBar.tsx":
/*!**********************************************!*\
  !*** ./src/ActionBar/EdgeConstraintsBar.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EdgeConstraintsBar: () => (/* binding */ EdgeConstraintsBar)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");




const Container = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].div`
    position: absolute;
    background-color: #fff;
    right: 0;
    top: 64px;  
    border-radius: 5px;
    padding-right: 8px;
    display: block;
    margin-right: 8px;
    padding-left: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    padding: 10px;
    > * {
        margin-left: 8px;
    }
`;
const Title = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].div`
    font-size: 1.2em;
    color: #333;
    font-weight: 600;
    border-bottom: 2px solid #ddd;
    padding-bottom: 10px;
    margin-bottom: 10px;
`;
const RadioButtonLabel = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].label`
    display: flex;
    align-items: center;
    margin-right: 10px;

    input {
        margin-right: 10px;
    }
`;
const EdgeConstraintsBar = ({
  onSetHorizontal,
  onSetVertical
}) => {
  const [selectedEdge, setSelectedEdge] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
  const handleEdgeChange = e => {
    const edge = e.target.value;
    setSelectedEdge(edge);
    if (edge === 'none') {
      onSetHorizontal(false);
      onSetVertical(false);
    } else if (edge === 'horizontal') {
      onSetHorizontal(true);
      onSetVertical(false);
    } else if (edge === 'vertical') {
      onSetHorizontal(false);
      onSetVertical(true);
    }
  };
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(Container, {
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Title, {
      children: " Restrictions "
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(RadioButtonLabel, {
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("input", {
        type: "radio",
        value: "none",
        checked: selectedEdge === 'none',
        onChange: handleEdgeChange,
        name: "edgeDirection"
      }), "None"]
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(RadioButtonLabel, {
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("input", {
        type: "radio",
        value: "horizontal",
        checked: selectedEdge === 'horizontal',
        onChange: handleEdgeChange,
        name: "edgeDirection"
      }), "Horizontal Edge"]
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(RadioButtonLabel, {
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("input", {
        type: "radio",
        value: "vertical",
        checked: selectedEdge === 'vertical',
        onChange: handleEdgeChange,
        name: "edgeDirection"
      }), "Vertical Edge"]
    })]
  });
};
EdgeConstraintsBar.displayName = "EdgeConstraintsBar";
try {
    // @ts-ignore
    EdgeConstraintsBar.displayName = "EdgeConstraintsBar";
    // @ts-ignore
    EdgeConstraintsBar.__docgenInfo = { "description": "", "displayName": "EdgeConstraintsBar", "props": { "onSetHorizontal": { "defaultValue": null, "description": "", "name": "onSetHorizontal", "required": true, "type": { "name": "(value: boolean) => void" } }, "onSetVertical": { "defaultValue": null, "description": "", "name": "onSetVertical", "required": true, "type": { "name": "(value: boolean) => void" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/ActionBar/EdgeConstraintsBar.tsx#EdgeConstraintsBar"] = { docgenInfo: EdgeConstraintsBar.__docgenInfo, name: "EdgeConstraintsBar", path: "src/ActionBar/EdgeConstraintsBar.tsx#EdgeConstraintsBar" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=PolygonDraw-stories.d584db54505ec853f492.hot-update.js.map