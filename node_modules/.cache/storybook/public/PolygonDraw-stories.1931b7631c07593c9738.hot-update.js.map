{"version":3,"file":"PolygonDraw-stories.1931b7631c07593c9738.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AA5EA","sources":["webpack://@freenow/react-polygon-editor/./src/ActionBar/ActionBar.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\nimport styled from 'styled-components';\n\nimport { FREEDOM_RED_900 } from '../common/colors';\n\nimport { ActionButton, ActionButtonIcons } from './ActionButton';\nimport { LABELS } from '../constants';\n\nconst Container = styled.div`\n    position: absolute;\n    right: 0;\n    bottom: 24px;\n    display: flex;\n\n    padding-right: 8px;\n    padding-left: 8px;\n\n    > * {\n        margin-left: 8px;\n    }\n`;\n\nexport interface Props {\n    editable: boolean;\n\n    drawable: boolean;\n\n    onFocus: () => void;\n\n    onEnableDrawMode: (enabled?: boolean) => void;\n    isVectorModeEnabled: boolean;\n\n    onEnableVectorMode: (enabled?: boolean) => void;\n    isDrawModeEnabled: boolean;\n\n    onAddVertex: () => void;\n\n    onDelete: () => void;\n    deleteInactive: boolean;\n\n    onExport: () => void;\n    onImport: () => void;\n}\n\nexport const ActionBar: FunctionComponent<Props> = ({\n    editable,\n    drawable,\n    deleteInactive,\n    isVectorModeEnabled,\n    onEnableVectorMode,\n    onEnableDrawMode,\n    isDrawModeEnabled,\n    onAddVertex,\n    onFocus,\n    onDelete,\n    onExport,\n    onImport,\n}) => (\n    <Container>\n        {editable && (\n            <>\n                <ActionButton\n                    onClick={() => {\n                        onEnableVectorMode(true);\n                        onEnableDrawMode(false); // Ensure draw mode is turned off when vector mode is turned on\n                    }}\n                    icon={ActionButtonIcons.VECTOR_MODE}\n                    inactive={!isVectorModeEnabled}\n                    aria-label={`${isVectorModeEnabled ? 'Disable Editing' : 'Enable Editing'}`}\n                >\n                    {LABELS.PEN}\n                </ActionButton>\n                <ActionButton\n                    onClick={onDelete}\n                    icon={ActionButtonIcons.TRASHCAN}\n                    activeIconColor={FREEDOM_RED_900}\n                    disabled={deleteInactive}\n                    inactive={deleteInactive}\n                    aria-label=\"Delete\"\n                >\n                    {LABELS.DELETE}\n                </ActionButton>\n            </>\n        )}\n        {drawable && (\n            <>\n                <ActionButton\n                    onClick={() => {\n                        onEnableDrawMode();\n                        onEnableVectorMode(false); // Ensure vector mode is turned off when draw mode is turned on\n                    }}\n                    icon={ActionButtonIcons.DRAW_MODE}\n                    inactive={!isDrawModeEnabled}\n                    aria-label={`${isDrawModeEnabled ? 'Disable Drawing' : 'Enable Drawing'}`}\n                >\n                    {LABELS.DRAW}\n                </ActionButton>\n                <ActionButton\n                    onClick={onDelete}\n                    icon={ActionButtonIcons.TRASHCAN}\n                    activeIconColor={FREEDOM_RED_900}\n                    disabled={deleteInactive}\n                    inactive={deleteInactive}\n                    aria-label=\"Delete\"\n                >\n                    {LABELS.DELETE}\n                </ActionButton>\n            </>\n        )}\n        <ActionButton onClick={onAddVertex} icon={ActionButtonIcons.ADD_VERTEX}>\n            {LABELS.ADD_VERTEX}\n        </ActionButton>\n        <ActionButton onClick={onImport} icon={ActionButtonIcons.IMPORT}>\n            {LABELS.IMPORT}\n        </ActionButton>\n        <ActionButton onClick={onExport} icon={ActionButtonIcons.EXPORT}>\n            {LABELS.EXPORT}\n        </ActionButton>\n        <ActionButton onClick={onFocus} icon={ActionButtonIcons.FRAME}>\n            {LABELS.FOCUS}\n        </ActionButton>\n    </Container>\n);\n"],"names":[],"sourceRoot":""}