{"version":3,"file":"PolygonDraw-stories.22cbcbaf57dcbf3ed7be.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAGA;AAvDA","sources":["webpack://@freenow/react-polygon-editor/./src/ActionBar/EdgeConstraintsBar.tsx"],"sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    position: absolute;\n    background-color: #fff;\n    right: 0;\n    top: 64px;  \n    border-radius: 5px;\n    padding-right: 8px;\n    display: block;\n    margin-right: 8px;\n    padding-left: 8px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    padding: 10px;\n    > * {\n        margin-left: 8px;\n    }\n`;\n\nconst Title = styled.div`\n    font-size: 1.2em;\n    color: #333;\n    font-weight: 600;\n    border-bottom: 2px solid #ddd;\n    padding-bottom: 10px;\n    margin-bottom: 10px;\n`;\n\n\nconst RadioButtonLabel = styled.label`\n    display: flex;\n    align-items: center;\n    margin-right: 10px;\n\n    input {\n        margin-right: 10px;\n    }\n`;\n\nexport interface EdgeConstraintsBarProps {\n    onSetHorizontal: (value: boolean) => void;\n    onSetVertical: (value: boolean) => void;\n}\n\nexport const EdgeConstraintsBar: FunctionComponent<EdgeConstraintsBarProps> = ({ onSetHorizontal, onSetVertical }) => {\n    const [selectedEdge, setSelectedEdge] = useState<string | null>(null);\n\n    const handleEdgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\n        const edge = e.target.value;\n        setSelectedEdge(edge);\n\n        if (edge === 'none') {\n            onSetHorizontal(false);\n            onSetVertical(false);\n        } else if (edge === 'horizontal') {\n            onSetHorizontal(true);\n            onSetVertical(false);\n        } else if (edge === 'vertical') {\n            onSetHorizontal(false);\n            onSetVertical(true);\n        }\n    }\n\n    return (\n        <Container>\n            <Title> Restrictions </Title>\n            <RadioButtonLabel>\n                <input \n                    type=\"radio\" \n                    value=\"None\"\n                    checked={selectedEdge === 'none'} \n                    onChange={handleEdgeChange}\n                    name=\"edgeDirection\"\n                />\n                None\n            </RadioButtonLabel>\n            <RadioButtonLabel>\n                <input \n                    type=\"radio\" \n                    value=\"horizontal\"\n                    checked={selectedEdge === 'horizontal'} \n                    onChange={handleEdgeChange}\n                    name=\"edgeDirection\"\n                />\n                Horizontal Edge\n            </RadioButtonLabel>\n            <RadioButtonLabel>\n                <input \n                    type=\"radio\" \n                    value=\"vertical\"\n                    checked={selectedEdge === 'vertical'} \n                    onChange={handleEdgeChange}\n                    name=\"edgeDirection\"\n                />\n                Vertical Edge\n            </RadioButtonLabel>\n        </Container>\n    );\n}"],"names":[],"sourceRoot":""}