{"version":3,"file":"PolygonDraw-stories.4e6f9d6889e0069637ff.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAxDA","sources":["webpack://@freenow/react-polygon-editor/./src/PolygonDraw/EdgeVertex.tsx"],"sourcesContent":["import React from 'react';\nimport { CircleMarker as LeafletCircleMarker } from 'react-leaflet';\n\nimport { Coordinate } from 'types';\nimport { createLeafletLatLngFromCoordinate } from '../helpers';\nimport { MAP } from '../constants';\nimport { EdgeRestriction } from './Map';\n\ninterface Props {\n    coordinate: Coordinate;\n    index: number;\n    onClick: (coordinate: Coordinate, index: number) => void;\n    edgeRestriction: EdgeRestriction;\n}\n\ninterface State {\n    isHoverActive: boolean;\n}\n\nexport class EdgeVertex extends React.Component<Props, State> {\n    state = {\n        isHoverActive: false,\n    };\n\n    handleMouseOver = () => this.setState({ isHoverActive: true });\n    handleMouseOut = () => this.setState({ isHoverActive: false });\n    handleClick = () => this.props.onClick(this.props.coordinate, this.props.index);\n\n\n    renderIcon = () => {\n        const { edgeRestriction } = this.props;\n\n        switch (edgeRestriction) {\n            case 'horizontal':\n                return (\n                    <div className=\"edge-icon\">\n                        <i className=\"fa fa-arrows-h\" aria-hidden=\"true\"></i>\n                    </div>\n                );\n            case 'vertical':\n                return (\n                    <div className=\"edge-icon\">\n                        <i className=\"fa fa-arrows-v\" aria-hidden=\"true\"></i>\n                    </div>\n                );\n            default:\n                return null; // No icon for 'none' or null restriction\n        }\n    };\n\n    render() {\n        const { isHoverActive } = this.state;\n        const { coordinate } = this.props;\n\n        return (\n            <div className=\"edge-vertex\">\n                {this.renderIcon()}\n                <LeafletCircleMarker\n                    \n                    fillColor={MAP.VERTEX_FILL_COLOR}\n                    fillOpacity={isHoverActive ? 1 : 0.8}\n                    color={MAP.POLYGON_ACTIVE_COLOR}\n                    opacity={isHoverActive ? 1 : 0.8}\n                    weight={isHoverActive ? 2 : 0.5}\n                    radius={isHoverActive ? 6 : 3}\n                    center={createLeafletLatLngFromCoordinate(coordinate)}\n                    eventHandlers={{\n                        click: this.handleClick,\n                        mouseover: this.handleMouseOver,\n                        mouseout: this.handleMouseOut,\n                    }}\n                />\n            </div>\n        );\n    }\n}\n"],"names":[],"sourceRoot":""}