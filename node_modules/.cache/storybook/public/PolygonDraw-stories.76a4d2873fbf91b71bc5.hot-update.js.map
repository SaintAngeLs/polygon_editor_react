{"version":3,"file":"PolygonDraw-stories.76a4d2873fbf91b71bc5.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AAEA;AACA;AACA;AAAA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AA5DA","sources":["webpack://@freenow/react-polygon-editor/./src/PolygonDraw/PolygonDraw.tsx"],"sourcesContent":["import React from 'react';\n\nimport { Coordinate } from 'types';\nimport { createLeafletLatLngTupleFromCoordinate } from '../helpers';\n\nimport { MAP } from '../constants';\nimport Map from './Map';\nimport { usePolygonEditor } from './usePolygonEditor';\n\nexport type Props<T extends Coordinate[] | Coordinate[][]> = {\n    boundary?: Coordinate[];\n    initialCenter?: Coordinate;\n    initialZoom?: number;\n    editable?: boolean;\n    onChange?: (polygon: T, isValid: boolean) => void;\n    polygon: T;\n    activeIndex?: number;\n    highlightedIndex?: number;\n    onClick?: (index: number) => void;\n    onMouseEnter?: (index: number) => void;\n    onMouseLeave?: (index: number) => void;\n};\n\nexport function PolygonDraw<T extends Coordinate[] | Coordinate[][]>({\n    polygon,\n    activeIndex = 0,\n    highlightedIndex,\n    boundary,\n    initialCenter,\n    initialZoom,\n    editable = true,\n    onChange,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n}: Props<T>): React.ReactElement {\n    const {\n        polygons,\n        selection,\n        addPoint,\n        addPointToEdge,\n        setPolygon,\n        deselectAllPoints,\n        removePointFromSelection,\n        addPointsToSelection,\n        selectPoints,\n        moveSelectedPoints,\n        deletePolygonPoints,\n        selectAllPoints,\n        isPolygonClosed,\n        undo,\n        redo,\n    } = usePolygonEditor(onChange, polygon, activeIndex);\n\n    return (\n        <Map\n            selection={selection}\n            editable={editable}\n            drawable\n            initialCenter={initialCenter ? createLeafletLatLngTupleFromCoordinate(initialCenter) : MAP.DEFAULT_CENTER}\n            initialZoom={initialZoom || MAP.DEFAULT_ZOOM}\n            boundaryPolygonCoordinates={boundary || MAP.WORLD_COORDINATES}\n            activePolygonIndex={activeIndex}\n            highlightedPolygonIndex={highlightedIndex}\n            polygonCoordinates={polygons}\n            setPolygon={setPolygon}\n            addPoint={addPoint}\n            addPointToEdge={addPointToEdge}\n            deselectAllPoints={deselectAllPoints}\n            removePointFromSelection={removePointFromSelection}\n            addPointsToSelection={addPointsToSelection}\n            selectPoints={selectPoints}\n            moveSelectedPoints={moveSelectedPoints}\n            deletePolygonPoints={deletePolygonPoints}\n            selectAllPoints={selectAllPoints}\n            isPolygonClosed={isPolygonClosed}\n            onClick={onClick}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            onUndo={undo}\n            onRedo={redo}\n        />\n    );\n}\n"],"names":[],"sourceRoot":""}