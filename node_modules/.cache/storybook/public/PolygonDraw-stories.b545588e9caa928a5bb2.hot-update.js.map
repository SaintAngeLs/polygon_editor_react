{"version":3,"file":"PolygonDraw-stories.b545588e9caa928a5bb2.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AAGA;AApCA","sources":["webpack://@freenow/react-polygon-editor/./src/ActionBar/EdgeConstraintsBar.tsx"],"sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    position: absolute;\n    background-color: #fff;\n    right: 0;\n    top: 64px;  \n    border-radius: 5px;\n    padding-right: 8px;\n    display: block;\n    padding-right: 8px;\n    padding-left: 8px;\n    > * {\n        margin-left: 8px;\n    }\n`;\n\nconst CheckboxLabel = styled.label`\n    display: flex;\n    align-items: center;\n    margin-right: 10px;\n`;\n\nexport interface EdgeConstraintsBarProps {\n    onSetHorizontal: (value: boolean) => void;\n    onSetVertical: (value: boolean) => void;\n}\n\nexport const EdgeConstraintsBar: FunctionComponent<EdgeConstraintsBarProps> = ({ onSetHorizontal, onSetVertical }) => {\n    const [isHorizontal, setIsHorizontal] = useState(false);\n    const [isVertical, setIsVertical] = useState(false);\n\n    const handleHorizontalChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (isVertical) return;  // Do not allow both to be checked\n        setIsHorizontal(e.target.checked);\n        onSetHorizontal(e.target.checked);\n    }\n\n    const handleVerticalChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (isHorizontal) return;  // Do not allow both to be checked\n        setIsVertical(e.target.checked);\n        onSetVertical(e.target.checked);\n    }\n\n    return (\n        <Container>\n            <CheckboxLabel>\n                <input \n                    type=\"checkbox\" \n                    checked={isHorizontal} \n                    onChange={handleHorizontalChange}\n                />\n                Horizontal Edge\n            </CheckboxLabel>\n            <CheckboxLabel>\n                <input \n                    type=\"checkbox\" \n                    checked={isVertical} \n                    onChange={handleVerticalChange}\n                />\n                Vertical Edge\n            </CheckboxLabel>\n        </Container>\n    );\n}\n"],"names":[],"sourceRoot":""}