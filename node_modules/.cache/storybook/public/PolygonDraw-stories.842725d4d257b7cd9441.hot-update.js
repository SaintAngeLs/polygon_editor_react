"use strict";
self["webpackHotUpdate_freenow_react_polygon_editor"]("PolygonDraw-stories",{

/***/ "./src/ActionBar/ActionBar.tsx":
/*!*************************************!*\
  !*** ./src/ActionBar/ActionBar.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ActionBar: () => (/* binding */ ActionBar)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _common_colors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/colors */ "./src/common/colors.tsx");
/* harmony import */ var _ActionButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ActionButton */ "./src/ActionBar/ActionButton.tsx");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");








const Container = styled_components__WEBPACK_IMPORTED_MODULE_4__["default"].div`
    position: absolute;
    right: 0;
    bottom: 24px;
    display: flex;

    padding-right: 8px;
    padding-left: 8px;

    > * {
        margin-left: 8px;
    }
`;
const ActionBar = ({
  editable,
  drawable,
  deleteInactive,
  isVectorModeEnabled,
  onEnableVectorMode,
  onEnableDrawMode,
  isDrawModeEnabled,
  onAddVertex,
  onFocus,
  onDelete,
  onExport,
  onImport
}) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(Container, {
  children: [editable && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment, {
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {
      onClick: e => {
        e.stopPropagation();
        if (!isVectorModeEnabled) {
          onEnableVectorMode(true);
          onEnableDrawMode(false);
        }
      },
      icon: _ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButtonIcons.VECTOR_MODE,
      inactive: !isVectorModeEnabled,
      "aria-label": `${isVectorModeEnabled ? 'Disable Editing' : 'Enable Editing'}`,
      children: _constants__WEBPACK_IMPORTED_MODULE_2__.LABELS.PEN
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {
      onClick: onDelete,
      icon: _ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButtonIcons.TRASHCAN,
      activeIconColor: _common_colors__WEBPACK_IMPORTED_MODULE_5__.FREEDOM_RED_900,
      disabled: deleteInactive,
      inactive: deleteInactive,
      "aria-label": "Delete",
      children: _constants__WEBPACK_IMPORTED_MODULE_2__.LABELS.DELETE
    })]
  }), drawable && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment, {
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {
      onClick: () => {
        onEnableDrawMode(true);
        onEnableVectorMode(false); // Ensure vector mode is turned off when draw mode is turned on
      },

      icon: _ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButtonIcons.DRAW_MODE,
      inactive: !isDrawModeEnabled,
      "aria-label": `${isDrawModeEnabled ? 'Disable Drawing' : 'Enable Drawing'}`,
      children: _constants__WEBPACK_IMPORTED_MODULE_2__.LABELS.DRAW
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {
      onClick: onDelete,
      icon: _ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButtonIcons.TRASHCAN,
      activeIconColor: _common_colors__WEBPACK_IMPORTED_MODULE_5__.FREEDOM_RED_900,
      disabled: deleteInactive,
      inactive: deleteInactive,
      "aria-label": "Delete",
      children: _constants__WEBPACK_IMPORTED_MODULE_2__.LABELS.DELETE
    })]
  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {
    onClick: onAddVertex,
    icon: _ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButtonIcons.ADD_VERTEX,
    children: _constants__WEBPACK_IMPORTED_MODULE_2__.LABELS.ADD_VERTEX
  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {
    onClick: onImport,
    icon: _ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButtonIcons.IMPORT,
    children: _constants__WEBPACK_IMPORTED_MODULE_2__.LABELS.IMPORT
  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {
    onClick: onExport,
    icon: _ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButtonIcons.EXPORT,
    children: _constants__WEBPACK_IMPORTED_MODULE_2__.LABELS.EXPORT
  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {
    onClick: onFocus,
    icon: _ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButtonIcons.FRAME,
    children: _constants__WEBPACK_IMPORTED_MODULE_2__.LABELS.FOCUS
  })]
});
ActionBar.displayName = "ActionBar";
try {
    // @ts-ignore
    ActionBar.displayName = "ActionBar";
    // @ts-ignore
    ActionBar.__docgenInfo = { "description": "", "displayName": "ActionBar", "props": { "editable": { "defaultValue": null, "description": "", "name": "editable", "required": true, "type": { "name": "boolean" } }, "drawable": { "defaultValue": null, "description": "", "name": "drawable", "required": true, "type": { "name": "boolean" } }, "onFocus": { "defaultValue": null, "description": "", "name": "onFocus", "required": true, "type": { "name": "() => void" } }, "onEnableDrawMode": { "defaultValue": null, "description": "", "name": "onEnableDrawMode", "required": true, "type": { "name": "(enabled?: boolean | undefined) => void" } }, "isVectorModeEnabled": { "defaultValue": null, "description": "", "name": "isVectorModeEnabled", "required": true, "type": { "name": "boolean" } }, "onEnableVectorMode": { "defaultValue": null, "description": "", "name": "onEnableVectorMode", "required": true, "type": { "name": "(enabled?: boolean | undefined) => void" } }, "isDrawModeEnabled": { "defaultValue": null, "description": "", "name": "isDrawModeEnabled", "required": true, "type": { "name": "boolean" } }, "onAddVertex": { "defaultValue": null, "description": "", "name": "onAddVertex", "required": true, "type": { "name": "() => void" } }, "onDelete": { "defaultValue": null, "description": "", "name": "onDelete", "required": true, "type": { "name": "() => void" } }, "deleteInactive": { "defaultValue": null, "description": "", "name": "deleteInactive", "required": true, "type": { "name": "boolean" } }, "onExport": { "defaultValue": null, "description": "", "name": "onExport", "required": true, "type": { "name": "() => void" } }, "onImport": { "defaultValue": null, "description": "", "name": "onImport", "required": true, "type": { "name": "() => void" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/ActionBar/ActionBar.tsx#ActionBar"] = { docgenInfo: ActionBar.__docgenInfo, name: "ActionBar", path: "src/ActionBar/ActionBar.tsx#ActionBar" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=PolygonDraw-stories.842725d4d257b7cd9441.hot-update.js.map