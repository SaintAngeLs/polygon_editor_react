self["webpackHotUpdate_freenow_react_polygon_editor"]("PolygonDraw-stories",{

/***/ "./src/ActionBar/ActionBar.tsx":
/*!*************************************!*\
  !*** ./src/ActionBar/ActionBar.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ActionBar: () => (/* binding */ ActionBar)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _common_colors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/colors */ "./src/common/colors.tsx");
/* harmony import */ var _ActionButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ActionButton */ "./src/ActionBar/ActionButton.tsx");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");








const Container = styled_components__WEBPACK_IMPORTED_MODULE_4__["default"].div`
    position: absolute;
    right: 0;
    bottom: 24px;
    display: flex;

    padding-right: 8px;
    padding-left: 8px;

    > * {
        margin-left: 8px;
    }
`;
const ActionBar = ({
  editable,
  drawable,
  deleteInactive,
  isVectorModeEnabled,
  onEnableVectorMode,
  onEnableDrawMode,
  isDrawModeEnabled,
  onAddVertex,
  onFocus,
  onDelete,
  onExport,
  onImport
}) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(Container, {
  children: [editable && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment, {
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {
      onClick: onEnableVectorMode,
      icon: _ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButtonIcons.VECTOR_MODE,
      inactive: !isVectorModeEnabled,
      "aria-label": `${isVectorModeEnabled ? 'Disable Editing' : 'Enable Editing'}`,
      children: _constants__WEBPACK_IMPORTED_MODULE_2__.LABELS.PEN
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {
      onClick: onDelete,
      icon: _ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButtonIcons.TRASHCAN,
      activeIconColor: _common_colors__WEBPACK_IMPORTED_MODULE_5__.FREEDOM_RED_900,
      disabled: deleteInactive,
      inactive: deleteInactive,
      "aria-label": "Delete",
      children: _constants__WEBPACK_IMPORTED_MODULE_2__.LABELS.DELETE
    })]
  }), drawable && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment, {
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {
      onClick: onEnableDrawMode,
      icon: _ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButtonIcons.DRAW_MODE,
      inactive: !isDrawModeEnabled,
      "aria-label": `${isDrawModeEnabled ? 'Disable Drawing' : 'Enable Drawing'}`,
      children: _constants__WEBPACK_IMPORTED_MODULE_2__.LABELS.DRAW
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {
      onClick: onDelete,
      icon: _ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButtonIcons.TRASHCAN,
      activeIconColor: _common_colors__WEBPACK_IMPORTED_MODULE_5__.FREEDOM_RED_900,
      disabled: deleteInactive,
      inactive: deleteInactive,
      "aria-label": "Delete",
      children: _constants__WEBPACK_IMPORTED_MODULE_2__.LABELS.DELETE
    })]
  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {
    onClick: onAddVertex,
    icon: _ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButtonIcons.ADD_VERTEX,
    children: _constants__WEBPACK_IMPORTED_MODULE_2__.LABELS.ADD_VERTEX
  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {
    onClick: onImport,
    icon: _ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButtonIcons.IMPORT,
    children: _constants__WEBPACK_IMPORTED_MODULE_2__.LABELS.IMPORT
  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {
    onClick: onExport,
    icon: _ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButtonIcons.EXPORT,
    children: _constants__WEBPACK_IMPORTED_MODULE_2__.LABELS.EXPORT
  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {
    onClick: onFocus,
    icon: _ActionButton__WEBPACK_IMPORTED_MODULE_1__.ActionButtonIcons.FRAME,
    children: _constants__WEBPACK_IMPORTED_MODULE_2__.LABELS.FOCUS
  })]
});
ActionBar.displayName = "ActionBar";
try {
    // @ts-ignore
    ActionBar.displayName = "ActionBar";
    // @ts-ignore
    ActionBar.__docgenInfo = { "description": "", "displayName": "ActionBar", "props": { "editable": { "defaultValue": null, "description": "", "name": "editable", "required": true, "type": { "name": "boolean" } }, "drawable": { "defaultValue": null, "description": "", "name": "drawable", "required": true, "type": { "name": "boolean" } }, "onFocus": { "defaultValue": null, "description": "", "name": "onFocus", "required": true, "type": { "name": "() => void" } }, "onEnableVectorMode": { "defaultValue": null, "description": "", "name": "onEnableVectorMode", "required": true, "type": { "name": "() => void" } }, "isVectorModeEnabled": { "defaultValue": null, "description": "", "name": "isVectorModeEnabled", "required": true, "type": { "name": "boolean" } }, "onEnableDrawMode": { "defaultValue": null, "description": "", "name": "onEnableDrawMode", "required": true, "type": { "name": "() => void" } }, "isDrawModeEnabled": { "defaultValue": null, "description": "", "name": "isDrawModeEnabled", "required": true, "type": { "name": "boolean" } }, "onAddVertex": { "defaultValue": null, "description": "", "name": "onAddVertex", "required": true, "type": { "name": "() => void" } }, "onDelete": { "defaultValue": null, "description": "", "name": "onDelete", "required": true, "type": { "name": "() => void" } }, "deleteInactive": { "defaultValue": null, "description": "", "name": "deleteInactive", "required": true, "type": { "name": "boolean" } }, "onExport": { "defaultValue": null, "description": "", "name": "onExport", "required": true, "type": { "name": "() => void" } }, "onImport": { "defaultValue": null, "description": "", "name": "onImport", "required": true, "type": { "name": "() => void" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/ActionBar/ActionBar.tsx#ActionBar"] = { docgenInfo: ActionBar.__docgenInfo, name: "ActionBar", path: "src/ActionBar/ActionBar.tsx#ActionBar" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/ActionBar/ActionButton.tsx":
/*!****************************************!*\
  !*** ./src/ActionBar/ActionButton.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ActionButton: () => (/* binding */ ActionButton),
/* harmony export */   ActionButtonIcons: () => (/* binding */ ActionButtonIcons)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _common_colors__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../common/colors */ "./src/common/colors.tsx");
/* harmony import */ var _Icons_Frame__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Icons/Frame */ "./src/ActionBar/Icons/Frame.tsx");
/* harmony import */ var _Icons_Trashbin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Icons/Trashbin */ "./src/ActionBar/Icons/Trashbin.tsx");
/* harmony import */ var _Icons_VectorMode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Icons/VectorMode */ "./src/ActionBar/Icons/VectorMode.tsx");
/* harmony import */ var _Icons_Export__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Icons/Export */ "./src/ActionBar/Icons/Export.tsx");
/* harmony import */ var _Icons_Import__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Icons/Import */ "./src/ActionBar/Icons/Import.tsx");
/* harmony import */ var _Icons_DrawMode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Icons/DrawMode */ "./src/ActionBar/Icons/DrawMode.tsx");
/* harmony import */ var _Icons_AddVertex__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Icons/AddVertex */ "./src/ActionBar/Icons/AddVertex.tsx");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");












let ActionButtonIcons = /*#__PURE__*/function (ActionButtonIcons) {
  ActionButtonIcons["TRASHCAN"] = "TRASHCAN";
  ActionButtonIcons["FRAME"] = "FRAME";
  ActionButtonIcons["VECTOR_MODE"] = "VECTOR_MODE";
  ActionButtonIcons["ADD_VERTEX"] = "ADD_VERTEX";
  ActionButtonIcons["DRAW_MODE"] = "DRAW_MODE";
  ActionButtonIcons["EXPORT"] = "EXPORT";
  ActionButtonIcons["IMPORT"] = "IMPORT";
  return ActionButtonIcons;
}({});
const Container = (0,styled_components__WEBPACK_IMPORTED_MODULE_9__["default"])('div')`
    position: relative;
    width: 42px;
    height: 42px;

    padding-top: 6px;
    border-radius: 4px;

    text-align: center;
    font-size: 10px;
    font-weight: 600;
    color: ${_common_colors__WEBPACK_IMPORTED_MODULE_10__.AUTHENTIC_BLUE_900};
    background-color: ${_common_colors__WEBPACK_IMPORTED_MODULE_10__.WHITE};
    border: solid ${_common_colors__WEBPACK_IMPORTED_MODULE_10__.AUTHENTIC_BLUE_200} 1px;

    box-shadow: inherit;
    transition: 0.2s;

    user-select: none;
    cursor: ${({
  disabled
}) => disabled ? 'not-allowed' : 'pointer'};

    &:hover {
        transform: scale(1.005);
        box-shadow: 0 1px 6px 0 rgba(0, 0, 0, 0.16);
        z-index: 1;
    }
`;
const renderIcon = (icon, inactive, activeIconColor = _common_colors__WEBPACK_IMPORTED_MODULE_10__.ACTION_BLUE_900) => {
  const props = {
    iconColor: inactive ? _common_colors__WEBPACK_IMPORTED_MODULE_10__.AUTHENTIC_BLUE_200 : activeIconColor,
    width: 16,
    height: 16
  };
  switch (icon) {
    case ActionButtonIcons.TRASHCAN:
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_Icons_Trashbin__WEBPACK_IMPORTED_MODULE_2__.Trashbin, {
        ...props
      });
    case ActionButtonIcons.FRAME:
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_Icons_Frame__WEBPACK_IMPORTED_MODULE_1__.Frame, {
        ...props
      });
    case ActionButtonIcons.VECTOR_MODE:
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_Icons_VectorMode__WEBPACK_IMPORTED_MODULE_3__.VectorMode, {
        ...props
      });
    case ActionButtonIcons.ADD_VERTEX:
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_Icons_AddVertex__WEBPACK_IMPORTED_MODULE_7__.AddVertex, {
        ...props
      });
    case ActionButtonIcons.DRAW_MODE:
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_Icons_DrawMode__WEBPACK_IMPORTED_MODULE_6__.DrawMode, {
        ...props
      });
    case ActionButtonIcons.EXPORT:
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_Icons_Export__WEBPACK_IMPORTED_MODULE_4__.Export, {
        ...props
      });
    case ActionButtonIcons.IMPORT:
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_Icons_Import__WEBPACK_IMPORTED_MODULE_5__.Import, {
        ...props
      });
    default:
      return null;
  }
};
const ActionButton = ({
  icon,
  children,
  inactive,
  activeIconColor,
  ...props
}) => {
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(Container, {
    ...props,
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div", {
      children: renderIcon(icon, inactive, activeIconColor)
    }), children]
  });
};
ActionButton.displayName = "ActionButton";
try {
    // @ts-ignore
    ActionButton.displayName = "ActionButton";
    // @ts-ignore
    ActionButton.__docgenInfo = { "description": "", "displayName": "ActionButton", "props": { "icon": { "defaultValue": null, "description": "", "name": "icon", "required": true, "type": { "name": "enum", "value": [{ "value": "\"TRASHCAN\"" }, { "value": "\"FRAME\"" }, { "value": "\"VECTOR_MODE\"" }, { "value": "\"ADD_VERTEX\"" }, { "value": "\"DRAW_MODE\"" }, { "value": "\"EXPORT\"" }, { "value": "\"IMPORT\"" }] } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": true, "type": { "name": "() => void" } }, "inactive": { "defaultValue": null, "description": "", "name": "inactive", "required": false, "type": { "name": "boolean" } }, "disabled": { "defaultValue": null, "description": "", "name": "disabled", "required": false, "type": { "name": "boolean" } }, "activeIconColor": { "defaultValue": null, "description": "", "name": "activeIconColor", "required": false, "type": { "name": "string" } }, "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/ActionBar/ActionButton.tsx#ActionButton"] = { docgenInfo: ActionButton.__docgenInfo, name: "ActionButton", path: "src/ActionBar/ActionButton.tsx#ActionButton" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/ActionBar/Icons/AddVertex.tsx":
/*!*******************************************!*\
  !*** ./src/ActionBar/Icons/AddVertex.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AddVertex: () => (/* binding */ AddVertex)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_colors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/colors */ "./src/common/colors.tsx");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");



const AddVertex = ({
  iconColor = _common_colors__WEBPACK_IMPORTED_MODULE_2__.AUTHENTIC_BLUE_900,
  ...props
}) =>
/*#__PURE__*/
// <svg width="0.5em" height="0.5em" viewBox="0 0 24 24" {...props}>
//     <path
//         fill={iconColor}
//         d="M8 0c-.176 0-.35.006-.523.017l.064.998a7.117 7.117 0 01.918 0l.064-.998A8.113 8.113 0 008 0zM6.44.152c-.346.069-.684.16-1.012.27l.321.948c.287-.098.582-.177.884-.237L6.44.153zm4.132.271a7.946 7.946 0 00-1.011-.27l-.194.98c.302.06.597.14.884.237l.321-.947zm1.873.925a8 8 0 00-.906-.524l-.443.896c.275.136.54.29.793.459l.556-.831zM4.46.824c-.314.155-.616.33-.905.524l.556.83a7.07 7.07 0 01.793-.458L4.46.824zM2.725 1.985c-.262.23-.51.478-.74.74l.752.66c.202-.23.418-.446.648-.648l-.66-.752zm11.29.74a8.058 8.058 0 00-.74-.74l-.66.752c.23.202.447.418.648.648l.752-.66zm1.161 1.735a7.98 7.98 0 00-.524-.905l-.83.556c.169.253.322.518.458.793l.896-.443zM1.348 3.555c-.194.289-.37.591-.524.906l.896.443c.136-.275.29-.54.459-.793l-.831-.556zM.423 5.428a7.945 7.945 0 00-.27 1.011l.98.194c.06-.302.14-.597.237-.884l-.947-.321zM15.848 6.44a7.943 7.943 0 00-.27-1.012l-.948.321c.098.287.177.582.237.884l.98-.194zM.017 7.477a8.113 8.113 0 000 1.046l.998-.064a7.117 7.117 0 010-.918l-.998-.064zM16 8a8.1 8.1 0 00-.017-.523l-.998.064a7.11 7.11 0 010 .918l.998.064A8.1 8.1 0 0016 8zM.152 9.56c.069.346.16.684.27 1.012l.948-.321a6.944 6.944 0 01-.237-.884l-.98.194zm15.425 1.012c.112-.328.202-.666.27-1.011l-.98-.194c-.06.302-.14.597-.237.884l.947.321zM.824 11.54a8 8 0 00.524.905l.83-.556a6.999 6.999 0 01-.458-.793l-.896.443zm13.828.905c.194-.289.37-.591.524-.906l-.896-.443c-.136.275-.29.54-.459.793l.831.556zm-12.667.83c.23.262.478.51.74.74l.66-.752a7.047 7.047 0 01-.648-.648l-.752.66zm11.29.74c.262-.23.51-.478.74-.74l-.752-.66c-.201.23-.418.447-.648.648l.66.752zm-1.735 1.161c.314-.155.616-.33.905-.524l-.556-.83a7.07 7.07 0 01-.793.458l.443.896zm-7.985-.524c.289.194.591.37.906.524l.443-.896a6.998 6.998 0 01-.793-.459l-.556.831zm1.873.925c.328.112.666.202 1.011.27l.194-.98a6.953 6.953 0 01-.884-.237l-.321.947zm4.132.271a7.944 7.944 0 001.012-.27l-.321-.948a6.954 6.954 0 01-.884.237l.194.98zm-2.083.135a8.1 8.1 0 001.046 0l-.064-.998a7.11 7.11 0 01-.918 0l-.064.998zM8.5 4.5a.5.5 0 00-1 0v3h-3a.5.5 0 000 1h3v3a.5.5 0 001 0v-3h3a.5.5 0 000-1h-3v-3z"
//     />
// </svg>
(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  fill: "none",
  viewBox: "0 0 24 24",
  "stroke-width": "1.5",
  stroke: "currentColor",
  width: 16,
  height: 16,
  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path", {
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    d: "M12 9v6m3-3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"
  })
});
AddVertex.displayName = "AddVertex";
try {
    // @ts-ignore
    AddVertex.displayName = "AddVertex";
    // @ts-ignore
    AddVertex.__docgenInfo = { "description": "", "displayName": "AddVertex", "props": { "iconColor": { "defaultValue": { value: "#001e3e" }, "description": "", "name": "iconColor", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/ActionBar/Icons/AddVertex.tsx#AddVertex"] = { docgenInfo: AddVertex.__docgenInfo, name: "AddVertex", path: "src/ActionBar/Icons/AddVertex.tsx#AddVertex" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/ActionBar/Icons/DrawMode.tsx":
/*!******************************************!*\
  !*** ./src/ActionBar/Icons/DrawMode.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DrawMode: () => (/* binding */ DrawMode)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_colors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/colors */ "./src/common/colors.tsx");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");



const DrawMode = ({
  iconColor = _common_colors__WEBPACK_IMPORTED_MODULE_2__.AUTHENTIC_BLUE_900,
  ...props
}) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("svg", {
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  ...props,
  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path", {
    fill: iconColor,
    d: "M15 13.2v7.4l-14.3 3 3-14.3H11l3.9 3.9zm-9.4-1.6l-2 9 9-1.9v-7.1h-7zm13.8 3a3.5 3.5 0 0 1-5 0l-4.8-5a3.5 3.5 0 0 1 0-4.8l4-4.1 9.8 9.8-4 4zm-11.5 0a1.2 1.2 0 1 1 1.7 1.6 1.2 1.2 0 0 1-1.7-1.6z"
  })
});
DrawMode.displayName = "DrawMode";
try {
    // @ts-ignore
    DrawMode.displayName = "DrawMode";
    // @ts-ignore
    DrawMode.__docgenInfo = { "description": "", "displayName": "DrawMode", "props": { "iconColor": { "defaultValue": { value: "#001e3e" }, "description": "", "name": "iconColor", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/ActionBar/Icons/DrawMode.tsx#DrawMode"] = { docgenInfo: DrawMode.__docgenInfo, name: "DrawMode", path: "src/ActionBar/Icons/DrawMode.tsx#DrawMode" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/ActionBar/Icons/Export.tsx":
/*!****************************************!*\
  !*** ./src/ActionBar/Icons/Export.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Export: () => (/* binding */ Export)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_colors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/colors */ "./src/common/colors.tsx");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");



const Export = ({
  iconColor = _common_colors__WEBPACK_IMPORTED_MODULE_2__.AUTHENTIC_BLUE_900,
  ...props
}) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("svg", {
  viewBox: "0 0 24 24",
  ...props,
  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path", {
    d: "M19 19v2H5v-2h14zM13 3v10.436l5-4.445v2.676L12 17l-6-5.333V8.991l5 4.445V3h2z",
    fill: iconColor,
    fillRule: "nonzero"
  })
});
Export.displayName = "Export";
try {
    // @ts-ignore
    Export.displayName = "Export";
    // @ts-ignore
    Export.__docgenInfo = { "description": "", "displayName": "Export", "props": { "iconColor": { "defaultValue": { value: "#001e3e" }, "description": "", "name": "iconColor", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/ActionBar/Icons/Export.tsx#Export"] = { docgenInfo: Export.__docgenInfo, name: "Export", path: "src/ActionBar/Icons/Export.tsx#Export" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/ActionBar/Icons/Frame.tsx":
/*!***************************************!*\
  !*** ./src/ActionBar/Icons/Frame.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Frame: () => (/* binding */ Frame)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");


const Frame = ({
  iconColor,
  ...props
}) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("svg", {
  width: 24,
  height: 24,
  viewBox: "0 0 96 96",
  ...props,
  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path", {
    fill: iconColor,
    d: "M0 8V4a4 4 0 0 1 4-4h4v2H4a2 2 0 0 0-2 2v4H0zm0 8h2v4c0 1.1.9 2 2 2h4v2H4a4 4 0 0 1-4-4v-4zm24-8h-2V4a2 2 0 0 0-2-2h-4V0h4a4 4 0 0 1 4 4v4zm0 8v4a4 4 0 0 1-4 4h-4v-2h4a2 2 0 0 0 2-2v-4h2z"
  })
});
Frame.displayName = "Frame";
try {
    // @ts-ignore
    Frame.displayName = "Frame";
    // @ts-ignore
    Frame.__docgenInfo = { "description": "", "displayName": "Frame", "props": { "iconColor": { "defaultValue": null, "description": "", "name": "iconColor", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/ActionBar/Icons/Frame.tsx#Frame"] = { docgenInfo: Frame.__docgenInfo, name: "Frame", path: "src/ActionBar/Icons/Frame.tsx#Frame" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/ActionBar/Icons/Import.tsx":
/*!****************************************!*\
  !*** ./src/ActionBar/Icons/Import.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Import: () => (/* binding */ Import)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_colors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/colors */ "./src/common/colors.tsx");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");



const Import = ({
  iconColor = _common_colors__WEBPACK_IMPORTED_MODULE_2__.AUTHENTIC_BLUE_900,
  ...props
}) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("svg", {
  viewBox: "0 0 24 24",
  ...props,
  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path", {
    d: "M19 19v2H5v-2h14zM12 3l6 5.333v2.675l-5-4.444V17h-2V6.564l-5 4.445V8.334L12 3z",
    fill: iconColor,
    fillRule: "nonzero"
  })
});
Import.displayName = "Import";
try {
    // @ts-ignore
    Import.displayName = "Import";
    // @ts-ignore
    Import.__docgenInfo = { "description": "", "displayName": "Import", "props": { "iconColor": { "defaultValue": { value: "#001e3e" }, "description": "", "name": "iconColor", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/ActionBar/Icons/Import.tsx#Import"] = { docgenInfo: Import.__docgenInfo, name: "Import", path: "src/ActionBar/Icons/Import.tsx#Import" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/ActionBar/Icons/Trashbin.tsx":
/*!******************************************!*\
  !*** ./src/ActionBar/Icons/Trashbin.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Trashbin: () => (/* binding */ Trashbin)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_colors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/colors */ "./src/common/colors.tsx");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");



const Trashbin = ({
  iconColor = _common_colors__WEBPACK_IMPORTED_MODULE_2__.AUTHENTIC_BLUE_900,
  ...props
}) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("svg", {
  width: 24,
  height: 24,
  viewBox: "4 4 19 19",
  ...props,
  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path", {
    fill: iconColor,
    d: "M8.8 19.4c0 .9.6 1.6 1.4 1.6h6c.7 0 1.4-.7 1.4-1.6V10H8.8v9.4zm9.9-12.7h-2.8l-.8-1h-3.9l-.8 1H7.7V9h11V6.7z"
  })
});
Trashbin.displayName = "Trashbin";
try {
    // @ts-ignore
    Trashbin.displayName = "Trashbin";
    // @ts-ignore
    Trashbin.__docgenInfo = { "description": "", "displayName": "Trashbin", "props": { "iconColor": { "defaultValue": { value: "#001e3e" }, "description": "", "name": "iconColor", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/ActionBar/Icons/Trashbin.tsx#Trashbin"] = { docgenInfo: Trashbin.__docgenInfo, name: "Trashbin", path: "src/ActionBar/Icons/Trashbin.tsx#Trashbin" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/ActionBar/Icons/VectorMode.tsx":
/*!********************************************!*\
  !*** ./src/ActionBar/Icons/VectorMode.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VectorMode: () => (/* binding */ VectorMode)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_colors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/colors */ "./src/common/colors.tsx");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");



const VectorMode = ({
  iconColor = _common_colors__WEBPACK_IMPORTED_MODULE_2__.AUTHENTIC_BLUE_900,
  ...props
}) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("svg", {
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  ...props,
  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path", {
    fill: iconColor,
    d: "M15 13.2v7.4l-14.3 3 3-14.3H11l3.9 3.9zm-9.4-1.6l-2 9 9-1.9v-7.1h-7zm13.8 3a3.5 3.5 0 0 1-5 0l-4.8-5a3.5 3.5 0 0 1 0-4.8l4-4.1 9.8 9.8-4 4zm-11.5 0a1.2 1.2 0 1 1 1.7 1.6 1.2 1.2 0 0 1-1.7-1.6z"
  })
});
VectorMode.displayName = "VectorMode";
try {
    // @ts-ignore
    VectorMode.displayName = "VectorMode";
    // @ts-ignore
    VectorMode.__docgenInfo = { "description": "", "displayName": "VectorMode", "props": { "iconColor": { "defaultValue": { value: "#001e3e" }, "description": "", "name": "iconColor", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/ActionBar/Icons/VectorMode.tsx#VectorMode"] = { docgenInfo: VectorMode.__docgenInfo, name: "VectorMode", path: "src/ActionBar/Icons/VectorMode.tsx#VectorMode" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/PolygonDraw/BoundaryPolygon.tsx":
/*!*********************************************!*\
  !*** ./src/PolygonDraw/BoundaryPolygon.tsx ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BoundaryPolygon: () => (/* binding */ BoundaryPolygon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_leaflet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-leaflet */ "./node_modules/react-leaflet/lib/Polygon.js");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers */ "./src/helpers.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");





const BoundaryPolygon = ({
  coordinates,
  hasError
}) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(react_leaflet__WEBPACK_IMPORTED_MODULE_4__.Polygon, {
  positions: [_constants__WEBPACK_IMPORTED_MODULE_2__.MAP.WORLD_LAT_LNG_COORDINATES, coordinates.map(_helpers__WEBPACK_IMPORTED_MODULE_1__.createLeafletLatLngFromCoordinate)],
  fillColor: _constants__WEBPACK_IMPORTED_MODULE_2__.MAP.BOUNDARY_COLOR,
  color: hasError ? _constants__WEBPACK_IMPORTED_MODULE_2__.MAP.ERROR_BOUNDARY_COLOR : _constants__WEBPACK_IMPORTED_MODULE_2__.MAP.BOUNDARY_COLOR,
  weight: hasError ? _constants__WEBPACK_IMPORTED_MODULE_2__.MAP.BORDER_WIDTH : 0.4,
  interactive: false
});
BoundaryPolygon.displayName = "BoundaryPolygon";
try {
    // @ts-ignore
    BoundaryPolygon.displayName = "BoundaryPolygon";
    // @ts-ignore
    BoundaryPolygon.__docgenInfo = { "description": "", "displayName": "BoundaryPolygon", "props": { "coordinates": { "defaultValue": null, "description": "", "name": "coordinates", "required": true, "type": { "name": "Coordinate[]" } }, "hasError": { "defaultValue": null, "description": "", "name": "hasError", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/PolygonDraw/BoundaryPolygon.tsx#BoundaryPolygon"] = { docgenInfo: BoundaryPolygon.__docgenInfo, name: "BoundaryPolygon", path: "src/PolygonDraw/BoundaryPolygon.tsx#BoundaryPolygon" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/PolygonDraw/EdgeVertex.tsx":
/*!****************************************!*\
  !*** ./src/PolygonDraw/EdgeVertex.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EdgeVertex: () => (/* binding */ EdgeVertex)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_leaflet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-leaflet */ "./node_modules/react-leaflet/lib/CircleMarker.js");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers */ "./src/helpers.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");





class EdgeVertex extends (react__WEBPACK_IMPORTED_MODULE_0___default().Component) {
  state = {
    isHoverActive: false
  };
  handleMouseOver = () => this.setState({
    isHoverActive: true
  });
  handleMouseOut = () => this.setState({
    isHoverActive: false
  });
  handleClick = () => this.props.onClick(this.props.coordinate, this.props.index);
  render() {
    const {
      isHoverActive
    } = this.state;
    const {
      coordinate
    } = this.props;
    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(react_leaflet__WEBPACK_IMPORTED_MODULE_4__.CircleMarker, {
      fillColor: _constants__WEBPACK_IMPORTED_MODULE_2__.MAP.VERTEX_FILL_COLOR,
      fillOpacity: isHoverActive ? 1 : 0.8,
      color: _constants__WEBPACK_IMPORTED_MODULE_2__.MAP.POLYGON_ACTIVE_COLOR,
      opacity: isHoverActive ? 1 : 0.8,
      weight: isHoverActive ? 2 : 0.5,
      radius: isHoverActive ? 6 : 3,
      center: (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.createLeafletLatLngFromCoordinate)(coordinate),
      eventHandlers: {
        click: this.handleClick,
        mouseover: this.handleMouseOver,
        mouseout: this.handleMouseOut
      }
    });
  }
}
EdgeVertex.displayName = "EdgeVertex";
try {
    // @ts-ignore
    EdgeVertex.displayName = "EdgeVertex";
    // @ts-ignore
    EdgeVertex.__docgenInfo = { "description": "", "displayName": "EdgeVertex", "props": { "coordinate": { "defaultValue": null, "description": "", "name": "coordinate", "required": true, "type": { "name": "Coordinate" } }, "index": { "defaultValue": null, "description": "", "name": "index", "required": true, "type": { "name": "number" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": true, "type": { "name": "(coordinate: Coordinate, index: number) => void" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/PolygonDraw/EdgeVertex.tsx#EdgeVertex"] = { docgenInfo: EdgeVertex.__docgenInfo, name: "EdgeVertex", path: "src/PolygonDraw/EdgeVertex.tsx#EdgeVertex" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/PolygonDraw/Map.tsx":
/*!*********************************!*\
  !*** ./src/PolygonDraw/Map.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BaseMap: () => (/* binding */ BaseMap),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! leaflet */ "./node_modules/leaflet/dist/leaflet-src.js");
/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(leaflet__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_leaflet__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! react-leaflet */ "./node_modules/react-leaflet/lib/Polyline.js");
/* harmony import */ var react_leaflet__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! react-leaflet */ "./node_modules/react-leaflet/lib/Rectangle.js");
/* harmony import */ var react_leaflet__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! react-leaflet */ "./node_modules/react-leaflet/lib/Pane.js");
/* harmony import */ var lodash_flatten__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash.flatten */ "./node_modules/lodash.flatten/index.js");
/* harmony import */ var lodash_flatten__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_flatten__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers */ "./src/helpers.ts");
/* harmony import */ var _common_components_Modal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/components/Modal */ "./src/common/components/Modal.tsx");
/* harmony import */ var _conversion_ExportPolygonForm__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../conversion/ExportPolygonForm */ "./src/conversion/ExportPolygonForm.tsx");
/* harmony import */ var _conversion_ImportPolygonForm__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../conversion/ImportPolygonForm */ "./src/conversion/ImportPolygonForm.tsx");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _leaflet_Map__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../leaflet/Map */ "./src/leaflet/Map.tsx");
/* harmony import */ var _ActionBar_ActionBar__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../ActionBar/ActionBar */ "./src/ActionBar/ActionBar.tsx");
/* harmony import */ var _EdgeVertex__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./EdgeVertex */ "./src/PolygonDraw/EdgeVertex.tsx");
/* harmony import */ var _PolygonVertex__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./PolygonVertex */ "./src/PolygonDraw/PolygonVertex.tsx");
/* harmony import */ var _BoundaryPolygon__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./BoundaryPolygon */ "./src/PolygonDraw/BoundaryPolygon.tsx");
/* harmony import */ var _Polygon__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Polygon */ "./src/PolygonDraw/Polygon.tsx");
/* harmony import */ var _MapInner__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./MapInner */ "./src/PolygonDraw/MapInner.tsx");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");








//import { TileLayer } from '../leaflet/TileLayer';











class BaseMap extends (react__WEBPACK_IMPORTED_MODULE_0___default().Component) {
  map = null;
  state = {
    isMovedPointInBoundary: true,
    isShiftPressed: false,
    isMoveActive: false,
    rectangleSelection: null,
    previousMouseMovePosition: undefined,
    selectedEdge: null,
    isPenToolActive: false,
    isDrawToolActive: false,
    newPointPosition: null,
    showExportPolygonModal: false,
    showImportPolygonModal: false
  };
  static getDerivedStateFromProps(props, state) {
    return {
      ...state,
      isPenToolActive: props.polygonCoordinates.length === 0 ? true : state.isPenToolActive
    };
  }
  componentDidMount() {
    this.reframe();
    this.toggleVectorMode();
    const container = this.map?.getContainer();
    if (container) {
      container.addEventListener('keydown', this.handleKeyDown, false);
      container.addEventListener('keyup', this.handleKeyUp);
    }
  }
  componentWillUnmount() {
    const container = this.map?.getContainer();
    if (container) {
      container.removeEventListener('keydown', this.handleKeyDown, false);
      container.removeEventListener('keyup', this.handleKeyUp);
    }
  }
  getSnapshotBeforeUpdate(prevProps, prevState) {
    const reframe =
    // Reframe when the polygon loads for the first time
    prevProps.polygonCoordinates[prevProps.activePolygonIndex].length === 0 && this.props.polygonCoordinates[this.props.activePolygonIndex].length > 1 ||
    // Reframe when the boundary polygon loads for the first time
    prevProps.boundaryPolygonCoordinates !== this.props.boundaryPolygonCoordinates;
    const size = this.getSize(this.map);
    return {
      reframe,
      size
    };
  }
  componentDidUpdate(prevProps, prevState, {
    reframe,
    size
  }) {
    if (reframe) {
      this.reframe();
    }
    if (this.map && this.getSize(this.map) !== size) {
      this.map.invalidateSize();
    }
  }
  setMap = map => {
    if (map) {
      this.map = map;
      this.reframe();
      this.toggleVectorMode();
      const container = map?.getContainer();
      if (container) {
        container?.addEventListener('keydown', this.handleKeyDown, false);
        container?.addEventListener('keyup', this.handleKeyUp);
      }
    }
  };
  reframe = () => {
    const {
      polygonCoordinates,
      boundaryPolygonCoordinates,
      initialCenter,
      initialZoom
    } = this.props;
    if (polygonCoordinates[this.props.activePolygonIndex].length > 1) {
      this.reframeOnPolygon(polygonCoordinates);
    } else if (boundaryPolygonCoordinates.length > 0 && boundaryPolygonCoordinates !== _constants__WEBPACK_IMPORTED_MODULE_7__.MAP.WORLD_COORDINATES) {
      this.reframeOnPolygon(boundaryPolygonCoordinates);
    } else if (this.map) {
      this.map.setView(initialCenter, initialZoom);
    }
  };
  reframeOnPolygon = polygonCoordinates => {
    if (this.map && polygonCoordinates.length > 0) {
      const bounds = (0,_helpers__WEBPACK_IMPORTED_MODULE_3__.createLeafletLatLngBoundsFromCoordinates)(lodash_flatten__WEBPACK_IMPORTED_MODULE_2___default()(polygonCoordinates));
      this.map.fitBounds(bounds);
    }
  };
  toggleVectorMode = () => {
    if (!this.props.editable) {
      return;
    }
    this.setState({
      isPenToolActive: !this.state.isPenToolActive,
      newPointPosition: null
    });
  };
  toggleDrawMode = () => {
    if (!this.props.drawable) {
      return;
    }
    this.setState({
      isPenToolActive: !this.state.isPenToolActive,
      newPointPosition: null
    });
  };
  getSize = map => {
    const container = map?.getContainer();
    return container ? `${container.clientHeight}x${container.clientWidth}` : '';
  };
  handleOnFocusClicked = () => {
    const activePolygon = this.props.polygonCoordinates[this.props.activePolygonIndex];
    if (activePolygon) {
      this.reframeOnPolygon(activePolygon);
    } else {
      this.reframe();
    }
  };

  ///////////////////////////////////////////////////////////////////////////
  //                          Export / Import methods                      //
  ///////////////////////////////////////////////////////////////////////////

  handleExportPolygon = serialized => {
    navigator.clipboard.writeText(serialized);
  };
  handleExportPolygonActionClicked = () => {
    this.setState({
      showExportPolygonModal: true
    });
  };
  handleExportPolygonModalClosed = () => {
    this.setState({
      showExportPolygonModal: false
    });
  };
  handleImportPolygon = coordinates => {
    this.props.setPolygon(coordinates);
    this.reframeOnPolygon(coordinates);
  };
  handleImportPolygonActionClicked = () => {
    this.setState({
      showImportPolygonModal: true
    });
  };
  handleImportPolygonModalClosed = () => {
    this.setState({
      showImportPolygonModal: false
    });
  };

  ///////////////////////////////////////////////////////////////////////////
  //                          Map Events methods                           //
  ///////////////////////////////////////////////////////////////////////////

  handleMapClick = event => {
    const coordinate = (0,_helpers__WEBPACK_IMPORTED_MODULE_3__.createCoordinateFromLeafletLatLng)(event.latlng);
    if (this.state.isPenToolActive && !this.props.isPolygonClosed && (0,_helpers__WEBPACK_IMPORTED_MODULE_3__.isCoordinateInPolygon)(coordinate, this.props.boundaryPolygonCoordinates)) {
      this.props.addPoint(coordinate);
    } else if (!this.state.isShiftPressed) {
      this.props.deselectAllPoints();
    }
  };
  handleMouseDownOnMap = event => {
    const coordinate = (0,_helpers__WEBPACK_IMPORTED_MODULE_3__.createCoordinateFromLeafletLatLng)(event.latlng);
    if (this.state.isShiftPressed) {
      this.setState({
        rectangleSelection: {
          startPosition: coordinate,
          endPosition: coordinate,
          startTime: new Date().getTime()
        }
      });
    }
  };
  handleMouseUpOnMap = () => {
    if (this.state.rectangleSelection) {
      this.setState({
        rectangleSelection: null
      });
    }
  };
  handleMouseMoveOnMap = event => {
    const mouseCoordinate = (0,_helpers__WEBPACK_IMPORTED_MODULE_3__.createCoordinateFromLeafletLatLng)(event.latlng);
    if (this.state.rectangleSelection && new Date().getTime() - this.state.rectangleSelection?.startTime >= 100) {
      const start = this.state.rectangleSelection.startPosition;
      if (start) {
        const bounds = (0,leaflet__WEBPACK_IMPORTED_MODULE_1__.latLngBounds)((0,_helpers__WEBPACK_IMPORTED_MODULE_3__.createLeafletLatLngFromCoordinate)(start), event.latlng);
        const activePolygon = this.props.polygonCoordinates[this.props.activePolygonIndex];
        if (activePolygon) {
          const pointsInsideBounds = [];
          activePolygon.forEach((point, index) => {
            if (bounds.contains((0,_helpers__WEBPACK_IMPORTED_MODULE_3__.createLeafletLatLngFromCoordinate)(point))) {
              pointsInsideBounds.push(index);
            }
          });
          this.props.selectPoints(pointsInsideBounds);
        }
      }
      this.setState({
        rectangleSelection: {
          ...this.state.rectangleSelection,
          endPosition: mouseCoordinate
        }
      });
    } else {
      const newPointPosition = this.state.isPenToolActive && !this.props.isPolygonClosed && (0,_helpers__WEBPACK_IMPORTED_MODULE_3__.isCoordinateInPolygon)(mouseCoordinate, this.props.boundaryPolygonCoordinates) ? mouseCoordinate : null;
      this.setState({
        newPointPosition
      });
    }
  };
  handleMouseOutOfMap = () => this.setState({
    newPointPosition: null,
    rectangleSelection: null
  });

  ///////////////////////////////////////////////////////////////////////////
  //                           Vertex methods                              //
  ///////////////////////////////////////////////////////////////////////////

  onPolygonVertexClick = index => {
    if (index === 0 && this.props.polygonCoordinates[this.props.activePolygonIndex].length > 2 && !this.props.isPolygonClosed) {
      // Close polygon when user clicks the first point
      this.props.addPoint({
        ...this.props.polygonCoordinates[this.props.activePolygonIndex][0]
      });
    } else if (this.state.isShiftPressed) {
      if (this.props.selection.has(index)) {
        this.props.removePointFromSelection(index);
      } else {
        this.props.addPointsToSelection([index]);
      }
    } else {
      this.props.selectPoints([index]);
    }
  };
  startVertexMove = latLng => {
    if (!this.state.isMoveActive) {
      this.setState({
        isMoveActive: true,
        previousMouseMovePosition: (0,_helpers__WEBPACK_IMPORTED_MODULE_3__.createCoordinateFromLeafletLatLng)(latLng)
      });
    }
  };
  onPolygonVertexDragStart = (latLng, index) => {
    if (!this.props.selection.has(index)) {
      if (this.state.isShiftPressed) {
        this.props.addPointsToSelection([index]);
      } else {
        this.props.selectPoints([index]);
      }
    }
    this.startVertexMove(latLng);
  };
  updateVertexPosition = latLng => {
    if (this.state.isMoveActive && this.state.previousMouseMovePosition) {
      const coordinate = (0,_helpers__WEBPACK_IMPORTED_MODULE_3__.createCoordinateFromLeafletLatLng)(latLng);
      const moveVector = (0,_helpers__WEBPACK_IMPORTED_MODULE_3__.subtractCoordinates)(coordinate, this.state.previousMouseMovePosition);
      const nextCoordinates = Array.from(this.props.selection).map(i => this.props.polygonCoordinates[this.props.activePolygonIndex][i]).map(coord => (0,_helpers__WEBPACK_IMPORTED_MODULE_3__.addCoordinates)(coord, moveVector));
      const inBoundary = nextCoordinates.every(nextCoordinate => (0,_helpers__WEBPACK_IMPORTED_MODULE_3__.isCoordinateInPolygon)(nextCoordinate, this.props.boundaryPolygonCoordinates));
      if (inBoundary) {
        this.props.moveSelectedPoints(moveVector);
        this.setState({
          previousMouseMovePosition: coordinate,
          isMovedPointInBoundary: true
        });
      } else {
        this.setState({
          isMovedPointInBoundary: false
        });
      }
    }
  };
  endVertexMove = () => {
    if (this.state.isMoveActive) {
      this.setState({
        isMoveActive: false,
        previousMouseMovePosition: undefined,
        isMovedPointInBoundary: true
      });
    }
  };
  handleEdgeClick = (event, index) => {
    this.setState({
      selectedEdge: index
    });
  };
  handleAddVertexInMiddleOfEdge = () => {
    if (this.state.selectedEdge === null) {
      console.error("No edge selected to add a vertex.");
      return;
    }
    const activePolygon = this.props.polygonCoordinates[this.props.activePolygonIndex];
    const startPoint = activePolygon[this.state.selectedEdge];
    const endPoint = activePolygon[(this.state.selectedEdge + 1) % activePolygon.length];
    const midpoint = (0,_helpers__WEBPACK_IMPORTED_MODULE_3__.getMidPoint)(startPoint, endPoint);
    this.props.addPointToEdge(midpoint, this.state.selectedEdge);
    this.setState({
      selectedEdge: null
    });
  };

  ///////////////////////////////////////////////////////////////////////////
  //                      Keyboard handling methods                        //
  ///////////////////////////////////////////////////////////////////////////

  handleKeyDown = e => {
    e.preventDefault();
    switch (e.key) {
      case 'Escape':
        this.props.deselectAllPoints();
        break;
      case 'Backspace':
        this.props.deletePolygonPoints();
        break;
      case 'Shift':
        this.setState({
          isShiftPressed: true
        });
        break;
      case 'p':
        this.toggleVectorMode();
        break;
      case 'd':
        if (this.props.editable) {
          this.props.deselectAllPoints();
        }
        break;
      case 'a':
        if (this.props.editable) {
          this.props.selectAllPoints();
        }
        break;
      case 'f':
        this.reframe();
        break;
      case 'z':
        if (e.metaKey && e.shiftKey) {
          this.props.onRedo();
        } else if (e.metaKey) {
          this.props.onUndo();
        }
        break;
    }
  };
  handleKeyUp = e => {
    switch (e.key) {
      case 'Shift':
        this.setState({
          isShiftPressed: false
        });
        break;
    }
  };

  ///////////////////////////////////////////////////////////////////////////
  //                           Render methods                              //
  ///////////////////////////////////////////////////////////////////////////

  renderPolygonVertex = (coordinate, index) => {
    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)(_PolygonVertex__WEBPACK_IMPORTED_MODULE_11__.PolygonVertex, {
      coordinate: coordinate,
      isSelected: this.props.selection.has(index),
      index: index,
      onClick: this.onPolygonVertexClick,
      onDragStart: this.onPolygonVertexDragStart,
      onDrag: this.updateVertexPosition,
      onDragEnd: this.endVertexMove
    }, index);
  };
  renderActivePolygonPoints = () => {
    return this.props.polygonCoordinates[this.props.activePolygonIndex].map(this.renderPolygonVertex);
  };
  renderVertexEdge = (coordinate, index) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)(_EdgeVertex__WEBPACK_IMPORTED_MODULE_10__.EdgeVertex, {
    index: index,
    coordinate: coordinate,
    onClick: this.props.addPointToEdge && this.handleEdgeClick
  }, index);
  renderPolygonEdges = () => {
    return (0,_helpers__WEBPACK_IMPORTED_MODULE_3__.getPolygonEdges)(this.props.polygonCoordinates[this.props.activePolygonIndex]).map(this.renderVertexEdge);
  };
  renderInactivePolygons = () => {
    const activePolygonIsClosed = (0,_helpers__WEBPACK_IMPORTED_MODULE_3__.isPolygonClosed)(this.props.polygonCoordinates[this.props.activePolygonIndex]);
    return this.props.polygonCoordinates.map((coordinates, index) => {
      const eventHandler = {
        onClick: () => this.props.onClick && this.props.onClick(index),
        onMouseEnter: () => this.props.onMouseEnter && this.props.onMouseEnter(index),
        onMouseLeave: () => this.props.onMouseLeave && this.props.onMouseLeave(index)
      };
      return index === this.props.activePolygonIndex ? null : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)(_Polygon__WEBPACK_IMPORTED_MODULE_13__.Polygon, {
        coordinates: coordinates,
        isActive: false,
        isHighlighted: index === this.props.highlightedPolygonIndex,
        ...(activePolygonIsClosed ? eventHandler : {})
      }, `${index}-${coordinates.reduce((acc, cur) => acc + cur.latitude + cur.longitude, 0)}`);
    });
  };
  renderActivePolygon = () => {
    const coordinates = this.props.polygonCoordinates[this.props.activePolygonIndex];
    const index = this.props.activePolygonIndex;
    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)(_Polygon__WEBPACK_IMPORTED_MODULE_13__.Polygon, {
      coordinates: coordinates,
      isActive: true,
      isHighlighted: false,
      onClick: () => this.props.onClick && this.props.onClick(index),
      onMouseEnter: () => this.props.onMouseEnter && this.props.onMouseEnter(index),
      onMouseLeave: () => this.props.onMouseLeave && this.props.onMouseLeave(index)
    });
  };
  renderPolyline = () => {
    const {
      newPointPosition
    } = this.state;
    const polygon = this.props.polygonCoordinates[this.props.activePolygonIndex].map(_helpers__WEBPACK_IMPORTED_MODULE_3__.createLeafletLatLngFromCoordinate);
    if (polygon.length === 0) {
      return null;
    }
    const newPath = [polygon[polygon.length - 1]];
    if (newPointPosition) {
      newPath.push((0,_helpers__WEBPACK_IMPORTED_MODULE_3__.createLeafletLatLngFromCoordinate)(newPointPosition));
    }
    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.Fragment, {
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)(react_leaflet__WEBPACK_IMPORTED_MODULE_15__.Polyline, {
        positions: polygon,
        color: _constants__WEBPACK_IMPORTED_MODULE_7__.MAP.POLYGON_ACTIVE_COLOR,
        interactive: false
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)(react_leaflet__WEBPACK_IMPORTED_MODULE_15__.Polyline, {
        positions: newPath,
        color: _constants__WEBPACK_IMPORTED_MODULE_7__.MAP.POLYGON_ACTIVE_COLOR,
        dashArray: "2 12",
        interactive: false
      })]
    });
  };
  renderSelectionRectangle = () => {
    if (this.state.rectangleSelection) {
      const bounds = (0,leaflet__WEBPACK_IMPORTED_MODULE_1__.latLngBounds)((0,_helpers__WEBPACK_IMPORTED_MODULE_3__.createLeafletLatLngFromCoordinate)(this.state.rectangleSelection.startPosition), (0,_helpers__WEBPACK_IMPORTED_MODULE_3__.createLeafletLatLngFromCoordinate)(this.state.rectangleSelection.endPosition));
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)(react_leaflet__WEBPACK_IMPORTED_MODULE_16__.Rectangle, {
        color: _constants__WEBPACK_IMPORTED_MODULE_7__.MAP.RECTANGLE_SELECTION_COLOR,
        fillColor: _constants__WEBPACK_IMPORTED_MODULE_7__.MAP.RECTANGLE_SELECTION_COLOR,
        bounds: bounds
      });
    }
    return null;
  };
  render() {
    const {
      editable,
      drawable,
      selection,
      initialZoom,
      initialCenter
    } = this.props;
    const {
      newPointPosition,
      isPenToolActive,
      isDrawToolActive
    } = this.state;
    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsxs)(_leaflet_Map__WEBPACK_IMPORTED_MODULE_8__.Container, {
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsxs)(_leaflet_Map__WEBPACK_IMPORTED_MODULE_8__.Map, {
        fadeAnimation: true,
        trackResize: true,
        zoomControl: false,
        ref: this.setMap,
        center: initialCenter,
        zoom: initialZoom,
        zoomDelta: 2,
        zoomSnap: 1.5,
        boxZoom: false,
        drawCursor: !!newPointPosition,
        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)(_BoundaryPolygon__WEBPACK_IMPORTED_MODULE_12__.BoundaryPolygon, {
          coordinates: this.props.boundaryPolygonCoordinates,
          hasError: !this.state.isMovedPointInBoundary
        }), this.props.isPolygonClosed ? this.renderActivePolygon() : this.renderPolyline(), this.renderInactivePolygons(), editable && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsxs)(react_leaflet__WEBPACK_IMPORTED_MODULE_17__.Pane, {
          name: "Polygon points",
          children: [this.renderActivePolygonPoints(), this.props.isPolygonClosed && isPenToolActive && this.renderPolygonEdges()]
        }), this.state.rectangleSelection && this.renderSelectionRectangle(), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)(_MapInner__WEBPACK_IMPORTED_MODULE_18__["default"], {
          onClick: this.handleMapClick,
          onMouseOut: this.handleMouseOutOfMap,
          onMouseMove: this.handleMouseMoveOnMap,
          onMouseDown: this.handleMouseDownOnMap,
          onMouseUp: this.handleMouseUpOnMap
        })]
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)(_ActionBar_ActionBar__WEBPACK_IMPORTED_MODULE_9__.ActionBar, {
        editable: editable,
        drawable: drawable,
        isVectorModeEnabled: isPenToolActive,
        isDrawModeEnabled: isDrawToolActive,
        onDelete: this.props.deletePolygonPoints,
        onFocus: this.handleOnFocusClicked,
        onAddVertex: this.handleAddVertexInMiddleOfEdge,
        onEnableDrawMode: this.toggleDrawMode,
        onEnableVectorMode: this.toggleVectorMode,
        deleteInactive: selection.size === 0,
        onExport: this.handleExportPolygonActionClicked,
        onImport: this.handleImportPolygonActionClicked
      }), this.state.showExportPolygonModal && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)(_common_components_Modal__WEBPACK_IMPORTED_MODULE_4__.Modal, {
        onClose: this.handleExportPolygonModalClosed,
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)(_conversion_ExportPolygonForm__WEBPACK_IMPORTED_MODULE_5__.ExportPolygonForm, {
          polygon: this.props.polygonCoordinates[this.props.activePolygonIndex],
          onSubmit: this.handleExportPolygon
        })
      }), this.state.showImportPolygonModal && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)(_common_components_Modal__WEBPACK_IMPORTED_MODULE_4__.Modal, {
        onClose: this.handleImportPolygonModalClosed,
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)(_conversion_ImportPolygonForm__WEBPACK_IMPORTED_MODULE_6__.ImportPolygonForm, {
          onSubmit: this.handleImportPolygon
        })
      })]
    });
  }
}
BaseMap.displayName = "BaseMap";
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(BaseMap));
try {
    // @ts-ignore
    BaseMap.displayName = "BaseMap";
    // @ts-ignore
    BaseMap.__docgenInfo = { "description": "", "displayName": "BaseMap", "props": { "activePolygonIndex": { "defaultValue": null, "description": "activePolygonIndex is the index of the polygon that is currently available for editing", "name": "activePolygonIndex", "required": true, "type": { "name": "number" } }, "highlightedPolygonIndex": { "defaultValue": null, "description": "", "name": "highlightedPolygonIndex", "required": false, "type": { "name": "number" } }, "polygonCoordinates": { "defaultValue": null, "description": "", "name": "polygonCoordinates", "required": true, "type": { "name": "Coordinate[][]" } }, "boundaryPolygonCoordinates": { "defaultValue": null, "description": "", "name": "boundaryPolygonCoordinates", "required": true, "type": { "name": "Coordinate[]" } }, "selection": { "defaultValue": null, "description": "", "name": "selection", "required": true, "type": { "name": "Set<number>" } }, "editable": { "defaultValue": null, "description": "", "name": "editable", "required": true, "type": { "name": "boolean" } }, "drawable": { "defaultValue": null, "description": "", "name": "drawable", "required": true, "type": { "name": "boolean" } }, "initialCenter": { "defaultValue": null, "description": "", "name": "initialCenter", "required": true, "type": { "name": "LatLngTuple" } }, "initialZoom": { "defaultValue": null, "description": "", "name": "initialZoom", "required": true, "type": { "name": "number" } }, "isPolygonClosed": { "defaultValue": null, "description": "", "name": "isPolygonClosed", "required": true, "type": { "name": "boolean" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": false, "type": { "name": "((index: number) => void)" } }, "onMouseEnter": { "defaultValue": null, "description": "", "name": "onMouseEnter", "required": false, "type": { "name": "((index: number) => void)" } }, "onMouseLeave": { "defaultValue": null, "description": "", "name": "onMouseLeave", "required": false, "type": { "name": "((index: number) => void)" } }, "addPoint": { "defaultValue": null, "description": "", "name": "addPoint", "required": true, "type": { "name": "(coord: Coordinate) => void" } }, "addPointToEdge": { "defaultValue": null, "description": "", "name": "addPointToEdge", "required": true, "type": { "name": "(coordinate: Coordinate, index: number) => void" } }, "deselectAllPoints": { "defaultValue": null, "description": "", "name": "deselectAllPoints", "required": true, "type": { "name": "() => void" } }, "removePointFromSelection": { "defaultValue": null, "description": "", "name": "removePointFromSelection", "required": true, "type": { "name": "(index: number) => void" } }, "addPointsToSelection": { "defaultValue": null, "description": "", "name": "addPointsToSelection", "required": true, "type": { "name": "(indices: number[]) => void" } }, "selectPoints": { "defaultValue": null, "description": "", "name": "selectPoints", "required": true, "type": { "name": "(indices: number[]) => void" } }, "moveSelectedPoints": { "defaultValue": null, "description": "", "name": "moveSelectedPoints", "required": true, "type": { "name": "(newPosition: Coordinate) => void" } }, "deletePolygonPoints": { "defaultValue": null, "description": "", "name": "deletePolygonPoints", "required": true, "type": { "name": "() => void" } }, "selectAllPoints": { "defaultValue": null, "description": "", "name": "selectAllPoints", "required": true, "type": { "name": "() => void" } }, "setPolygon": { "defaultValue": null, "description": "", "name": "setPolygon", "required": true, "type": { "name": "(polygon: Coordinate[]) => void" } }, "onUndo": { "defaultValue": null, "description": "", "name": "onUndo", "required": true, "type": { "name": "() => void" } }, "onRedo": { "defaultValue": null, "description": "", "name": "onRedo", "required": true, "type": { "name": "() => void" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/PolygonDraw/Map.tsx#BaseMap"] = { docgenInfo: BaseMap.__docgenInfo, name: "BaseMap", path: "src/PolygonDraw/Map.tsx#BaseMap" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/PolygonDraw/MapInner.tsx":
/*!**************************************!*\
  !*** ./src/PolygonDraw/MapInner.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_leaflet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-leaflet */ "./node_modules/react-leaflet/lib/hooks.js");

const MapInner = ({
  onClick,
  onMouseMove,
  onMouseOut
}) => {
  (0,react_leaflet__WEBPACK_IMPORTED_MODULE_0__.useMapEvents)({
    click: onClick,
    mousedown: onMouseOut,
    mouseup: onMouseOut,
    mousemove: onMouseMove,
    mouseout: onMouseOut
  });
  return null;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MapInner);
try {
    // @ts-ignore
    MapInner.displayName = "MapInner";
    // @ts-ignore
    MapInner.__docgenInfo = { "description": "", "displayName": "MapInner", "props": { "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": true, "type": { "name": "(event: LeafletMouseEvent) => void" } }, "onMouseDown": { "defaultValue": null, "description": "", "name": "onMouseDown", "required": true, "type": { "name": "(event: LeafletMouseEvent) => void" } }, "onMouseUp": { "defaultValue": null, "description": "", "name": "onMouseUp", "required": true, "type": { "name": "(event: LeafletMouseEvent) => void" } }, "onMouseMove": { "defaultValue": null, "description": "", "name": "onMouseMove", "required": true, "type": { "name": "(event: LeafletMouseEvent) => void" } }, "onMouseOut": { "defaultValue": null, "description": "", "name": "onMouseOut", "required": true, "type": { "name": "(event: LeafletMouseEvent) => void" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/PolygonDraw/MapInner.tsx#MapInner"] = { docgenInfo: MapInner.__docgenInfo, name: "MapInner", path: "src/PolygonDraw/MapInner.tsx#MapInner" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/PolygonDraw/Polygon.tsx":
/*!*************************************!*\
  !*** ./src/PolygonDraw/Polygon.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Polygon: () => (/* binding */ Polygon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_leaflet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-leaflet */ "./node_modules/react-leaflet/lib/Polygon.js");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers */ "./src/helpers.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");





// refers to https://leafletjs.com/reference-1.6.0.html#path-dasharray and
// https://developer.mozilla.org/de/docs/Web/SVG/Attribute/stroke-dasharray
// 4 describes the dash size, 12 the gap size

const DASH_STROKE_SIZE = '1 4';
const Polygon = ({
  isActive,
  isHighlighted,
  coordinates,
  onClick,
  onMouseEnter,
  onMouseLeave
}) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(react_leaflet__WEBPACK_IMPORTED_MODULE_4__.Polygon, {
  positions: coordinates.map(_helpers__WEBPACK_IMPORTED_MODULE_1__.createLeafletLatLngFromCoordinate),
  dashArray: isActive ? '' : DASH_STROKE_SIZE,
  fillColor: isActive || isHighlighted ? _constants__WEBPACK_IMPORTED_MODULE_2__.MAP.POLYGON_ACTIVE_COLOR : _constants__WEBPACK_IMPORTED_MODULE_2__.MAP.POLYGON_INACTIVE_COLOR,
  weight: _constants__WEBPACK_IMPORTED_MODULE_2__.MAP.BORDER_WIDTH,
  color: isActive ? _constants__WEBPACK_IMPORTED_MODULE_2__.MAP.POLYGON_ACTIVE_COLOR : _constants__WEBPACK_IMPORTED_MODULE_2__.MAP.POLYGON_INACTIVE_COLOR,
  "data-testid": "polygon",
  eventHandlers: {
    click: onClick,
    mouseover: onMouseEnter,
    mouseout: onMouseLeave
  }
});
Polygon.displayName = "Polygon";
try {
    // @ts-ignore
    Polygon.displayName = "Polygon";
    // @ts-ignore
    Polygon.__docgenInfo = { "description": "", "displayName": "Polygon", "props": { "coordinates": { "defaultValue": null, "description": "", "name": "coordinates", "required": true, "type": { "name": "Coordinate[]" } }, "isActive": { "defaultValue": null, "description": "", "name": "isActive", "required": true, "type": { "name": "boolean" } }, "isHighlighted": { "defaultValue": null, "description": "", "name": "isHighlighted", "required": true, "type": { "name": "boolean" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": false, "type": { "name": "(() => void)" } }, "onMouseEnter": { "defaultValue": null, "description": "", "name": "onMouseEnter", "required": false, "type": { "name": "(() => void)" } }, "onMouseLeave": { "defaultValue": null, "description": "", "name": "onMouseLeave", "required": false, "type": { "name": "(() => void)" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/PolygonDraw/Polygon.tsx#Polygon"] = { docgenInfo: Polygon.__docgenInfo, name: "Polygon", path: "src/PolygonDraw/Polygon.tsx#Polygon" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/PolygonDraw/PolygonVertex.tsx":
/*!*******************************************!*\
  !*** ./src/PolygonDraw/PolygonVertex.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PolygonVertex: () => (/* binding */ PolygonVertex)
/* harmony export */ });
/* harmony import */ var leaflet_path_drag__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! leaflet-path-drag */ "./node_modules/leaflet-path-drag/index.js");
/* harmony import */ var leaflet_path_drag__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(leaflet_path_drag__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! leaflet */ "./node_modules/leaflet/dist/leaflet-src.js");
/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(leaflet__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_leaflet__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-leaflet */ "./node_modules/react-leaflet/lib/CircleMarker.js");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers */ "./src/helpers.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");







class PolygonVertex extends (react__WEBPACK_IMPORTED_MODULE_1___default().Component) {
  state = {
    isHovered: false,
    isDragged: false,
    latLng: new leaflet__WEBPACK_IMPORTED_MODULE_2__.LatLng(0, 0)
  };
  static getDerivedStateFromProps = (props, state) => {
    return state.isDragged ? state : {
      ...state,
      latLng: (0,_helpers__WEBPACK_IMPORTED_MODULE_3__.createLeafletLatLngFromCoordinate)(props.coordinate)
    };
  };
  componentDidMount() {
    if (this.circleMarkerElement) {
      this.circleMarkerElement.on('dragstart', this.handleDragStart);
      this.circleMarkerElement.on('drag', this.handleDrag);
      this.circleMarkerElement.on('dragend', this.handleDragEnd);
    }
  }
  componentWillUnmount() {
    if (this.circleMarkerElement) {
      this.circleMarkerElement.off('dragstart', this.handleDragStart);
      this.circleMarkerElement.off('drag', this.handleDrag);
      this.circleMarkerElement.off('dragend', this.handleDragEnd);
    }
  }

  // tslint:disable-next-line
  setCircleMarkerRef = ref => {
    if (ref) {
      this.circleMarkerElement = ref;
    }
  };
  handleClick = () => this.props.onClick(this.props.index);
  handleMouseOver = () => this.setState({
    isHovered: true
  });
  handleMouseOut = () => this.setState({
    isHovered: false
  });
  handleDragStart = event => {
    this.props.onDragStart(event.target.getLatLng(), this.props.index);
    this.setState({
      isDragged: true
    });
  };
  handleDrag = event => {
    if (this.state.isDragged) {
      this.props.onDrag(event.target.getLatLng());
    }
  };
  handleDragEnd = () => {
    this.props.onDragEnd();
    this.setState({
      isDragged: false
    });
  };
  render() {
    const {
      isSelected
    } = this.props;
    const {
      isHovered,
      latLng
    } = this.state;
    const selectedOrHovered = isSelected || isHovered;
    const hoveredAndNotSelected = isHovered && !isSelected;
    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_leaflet__WEBPACK_IMPORTED_MODULE_6__.CircleMarker, {
      "aria-label": "Polygon",
      ref: this.setCircleMarkerRef,
      fillColor: _constants__WEBPACK_IMPORTED_MODULE_4__.MAP.VERTEX_FILL_COLOR,
      fillOpacity: 1,
      color: _constants__WEBPACK_IMPORTED_MODULE_4__.MAP.POLYGON_ACTIVE_COLOR,
      opacity: hoveredAndNotSelected ? 0.6 : 1,
      weight: selectedOrHovered ? 4 : 1,
      radius: selectedOrHovered ? 6 : 4,
      center: latLng,
      eventHandlers: {
        click: this.handleClick,
        mouseover: this.handleMouseOver,
        mouseout: this.handleMouseOut
      },
      bubblingMouseEvents: false
      // @ts-ignore
      ,
      draggable: true
    });
  }
}
PolygonVertex.displayName = "PolygonVertex";
try {
    // @ts-ignore
    PolygonVertex.displayName = "PolygonVertex";
    // @ts-ignore
    PolygonVertex.__docgenInfo = { "description": "", "displayName": "PolygonVertex", "props": { "coordinate": { "defaultValue": null, "description": "", "name": "coordinate", "required": true, "type": { "name": "Coordinate" } }, "isSelected": { "defaultValue": null, "description": "", "name": "isSelected", "required": true, "type": { "name": "boolean" } }, "index": { "defaultValue": null, "description": "", "name": "index", "required": true, "type": { "name": "number" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": true, "type": { "name": "(index: number) => void" } }, "onDragStart": { "defaultValue": null, "description": "", "name": "onDragStart", "required": true, "type": { "name": "(latlng: LatLng, index: number) => void" } }, "onDrag": { "defaultValue": null, "description": "", "name": "onDrag", "required": true, "type": { "name": "(latlng: LatLng) => void" } }, "onDragEnd": { "defaultValue": null, "description": "", "name": "onDragEnd", "required": true, "type": { "name": "() => void" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/PolygonDraw/PolygonVertex.tsx#PolygonVertex"] = { docgenInfo: PolygonVertex.__docgenInfo, name: "PolygonVertex", path: "src/PolygonDraw/PolygonVertex.tsx#PolygonVertex" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    getDerivedStateFromProps.displayName = "PolygonVertex.getDerivedStateFromProps";
    // @ts-ignore
    getDerivedStateFromProps.__docgenInfo = { "description": "", "displayName": "PolygonVertex.getDerivedStateFromProps", "props": { "coordinate": { "defaultValue": null, "description": "", "name": "coordinate", "required": true, "type": { "name": "Coordinate" } }, "isSelected": { "defaultValue": null, "description": "", "name": "isSelected", "required": true, "type": { "name": "boolean" } }, "index": { "defaultValue": null, "description": "", "name": "index", "required": true, "type": { "name": "number" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": true, "type": { "name": "(index: number) => void" } }, "onDragStart": { "defaultValue": null, "description": "", "name": "onDragStart", "required": true, "type": { "name": "(latlng: LatLng, index: number) => void" } }, "onDrag": { "defaultValue": null, "description": "", "name": "onDrag", "required": true, "type": { "name": "(latlng: LatLng) => void" } }, "onDragEnd": { "defaultValue": null, "description": "", "name": "onDragEnd", "required": true, "type": { "name": "() => void" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/PolygonDraw/PolygonVertex.tsx#PolygonVertex.getDerivedStateFromProps"] = { docgenInfo: PolygonVertex.getDerivedStateFromProps.__docgenInfo, name: "PolygonVertex.getDerivedStateFromProps", path: "src/PolygonDraw/PolygonVertex.tsx#PolygonVertex.getDerivedStateFromProps" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/common/components/Button.tsx":
/*!******************************************!*\
  !*** ./src/common/components/Button.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Button: () => (/* binding */ Button)
/* harmony export */ });
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../colors */ "./src/common/colors.tsx");


const Button = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].button`
    border: 1px solid transparent;
    border-radius: 4px;
    cursor: pointer;
    height: 48px;
    font-size: 16px;
    min-width: 100px;
    padding: 0 16px;
    text-align: center;
    transition: background ease 216ms, border-color ease 216ms;

    ${({
  secondary
}) => secondary ? (0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)`
                  background: ${_colors__WEBPACK_IMPORTED_MODULE_1__.WHITE};
                  border-color: ${_colors__WEBPACK_IMPORTED_MODULE_1__.AUTHENTIC_BLUE_200};
                  color: ${_colors__WEBPACK_IMPORTED_MODULE_1__.AUTHENTIC_BLUE_900};

                  &:hover {
                      background: ${_colors__WEBPACK_IMPORTED_MODULE_1__.AUTHENTIC_BLUE_50};
                  }

                  &:disabled {
                      color: ${_colors__WEBPACK_IMPORTED_MODULE_1__.AUTHENTIC_BLUE_200};
                      background: ${_colors__WEBPACK_IMPORTED_MODULE_1__.WHITE};
                      border-color: ${_colors__WEBPACK_IMPORTED_MODULE_1__.AUTHENTIC_BLUE_200};
                  }
              ` : (0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)`
                  background: ${_colors__WEBPACK_IMPORTED_MODULE_1__.AUTHENTIC_BLUE_900};
                  border-color: ${_colors__WEBPACK_IMPORTED_MODULE_1__.AUTHENTIC_BLUE_900};
                  color: ${_colors__WEBPACK_IMPORTED_MODULE_1__.WHITE};

                  &:hover {
                      background: ${_colors__WEBPACK_IMPORTED_MODULE_1__.AUTHENTIC_BLUE_1100};
                      border-color: ${_colors__WEBPACK_IMPORTED_MODULE_1__.AUTHENTIC_BLUE_1100};
                  }

                  &:disabled {
                      color: ${_colors__WEBPACK_IMPORTED_MODULE_1__.WHITE};
                      background: ${_colors__WEBPACK_IMPORTED_MODULE_1__.AUTHENTIC_BLUE_200};
                      border-color: ${_colors__WEBPACK_IMPORTED_MODULE_1__.AUTHENTIC_BLUE_200};
                  }
              `}
`;
try {
    // @ts-ignore
    Button.displayName = "Button";
    // @ts-ignore
    Button.__docgenInfo = { "description": "", "displayName": "Button", "props": { "ref": { "defaultValue": null, "description": "", "name": "ref", "required": false, "type": { "name": "((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null" } }, "secondary": { "defaultValue": null, "description": "", "name": "secondary", "required": false, "type": { "name": "boolean" } }, "theme": { "defaultValue": null, "description": "", "name": "theme", "required": false, "type": { "name": "any" } }, "as": { "defaultValue": null, "description": "", "name": "as", "required": false, "type": { "name": "undefined" } }, "forwardedAs": { "defaultValue": null, "description": "", "name": "forwardedAs", "required": false, "type": { "name": "undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/common/components/Button.tsx#Button"] = { docgenInfo: Button.__docgenInfo, name: "Button", path: "src/common/components/Button.tsx#Button" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/common/components/ButtonGroup.tsx":
/*!***********************************************!*\
  !*** ./src/common/components/ButtonGroup.tsx ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ButtonGroup: () => (/* binding */ ButtonGroup)
/* harmony export */ });
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");

const ButtonGroup = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].div`
    display: flex;

    & > button:not(:last-child) {
        margin-right: 8px;
    }
`;
try {
    // @ts-ignore
    ButtonGroup.displayName = "ButtonGroup";
    // @ts-ignore
    ButtonGroup.__docgenInfo = { "description": "", "displayName": "ButtonGroup", "props": { "ref": { "defaultValue": null, "description": "", "name": "ref", "required": false, "type": { "name": "((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null" } }, "theme": { "defaultValue": null, "description": "", "name": "theme", "required": false, "type": { "name": "any" } }, "as": { "defaultValue": null, "description": "", "name": "as", "required": false, "type": { "name": "undefined" } }, "forwardedAs": { "defaultValue": null, "description": "", "name": "forwardedAs", "required": false, "type": { "name": "undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/common/components/ButtonGroup.tsx#ButtonGroup"] = { docgenInfo: ButtonGroup.__docgenInfo, name: "ButtonGroup", path: "src/common/components/ButtonGroup.tsx#ButtonGroup" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/common/components/CheckCircleSolidIcon.tsx":
/*!********************************************************!*\
  !*** ./src/common/components/CheckCircleSolidIcon.tsx ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CheckCircleSolidIcon: () => (/* binding */ CheckCircleSolidIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../colors */ "./src/common/colors.tsx");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");



const CheckCircleSolidIcon = ({
  color = _colors__WEBPACK_IMPORTED_MODULE_2__.AUTHENTIC_BLUE_900,
  ...props
}) => {
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("svg", {
    color: color,
    ...props,
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path", {
      d: "M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2zm3.898 6.293l-4.912 4.912-2.283-2.258-1.406 1.422 3.696 3.657 6.32-6.319-1.415-1.414z",
      fill: "currentColor",
      fillRule: "nonzero"
    })
  });
};
CheckCircleSolidIcon.displayName = "CheckCircleSolidIcon";
try {
    // @ts-ignore
    CheckCircleSolidIcon.displayName = "CheckCircleSolidIcon";
    // @ts-ignore
    CheckCircleSolidIcon.__docgenInfo = { "description": "", "displayName": "CheckCircleSolidIcon", "props": { "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string" } }, "color": { "defaultValue": { value: "#001e3e" }, "description": "", "name": "color", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/common/components/CheckCircleSolidIcon.tsx#CheckCircleSolidIcon"] = { docgenInfo: CheckCircleSolidIcon.__docgenInfo, name: "CheckCircleSolidIcon", path: "src/common/components/CheckCircleSolidIcon.tsx#CheckCircleSolidIcon" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/common/components/ChevronDownIcon.tsx":
/*!***************************************************!*\
  !*** ./src/common/components/ChevronDownIcon.tsx ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChevronDownIcon: () => (/* binding */ ChevronDownIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../colors */ "./src/common/colors.tsx");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");



const ChevronDownIcon = props => {
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("svg", {
    color: _colors__WEBPACK_IMPORTED_MODULE_2__.AUTHENTIC_BLUE_900,
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ...props,
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path", {
      d: "M12 13.726l7-6.175v2.676l-7 6.222-7-6.222V7.55z",
      fill: "currentColor",
      fillRule: "nonzero"
    })
  });
};
ChevronDownIcon.displayName = "ChevronDownIcon";
try {
    // @ts-ignore
    ChevronDownIcon.displayName = "ChevronDownIcon";
    // @ts-ignore
    ChevronDownIcon.__docgenInfo = { "description": "", "displayName": "ChevronDownIcon", "props": { "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/common/components/ChevronDownIcon.tsx#ChevronDownIcon"] = { docgenInfo: ChevronDownIcon.__docgenInfo, name: "ChevronDownIcon", path: "src/common/components/ChevronDownIcon.tsx#ChevronDownIcon" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/common/components/CloseCircleSolidIcon.tsx":
/*!********************************************************!*\
  !*** ./src/common/components/CloseCircleSolidIcon.tsx ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CloseCircleSolidIcon: () => (/* binding */ CloseCircleSolidIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../colors */ "./src/common/colors.tsx");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");



const CloseCircleSolidIcon = ({
  color = _colors__WEBPACK_IMPORTED_MODULE_2__.AUTHENTIC_BLUE_900,
  ...props
}) => {
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("svg", {
    color: color,
    ...props,
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path", {
      d: "M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2zm2.364 6l-2.475 2.474L9.414 8 8 9.414l2.474 2.475L8 14.364l1.414 1.414 2.475-2.475 2.475 2.475 1.414-1.414-2.475-2.475 2.475-2.475L14.364 8z",
      fill: "currentColor",
      fillRule: "nonzero"
    })
  });
};
CloseCircleSolidIcon.displayName = "CloseCircleSolidIcon";
try {
    // @ts-ignore
    CloseCircleSolidIcon.displayName = "CloseCircleSolidIcon";
    // @ts-ignore
    CloseCircleSolidIcon.__docgenInfo = { "description": "", "displayName": "CloseCircleSolidIcon", "props": { "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string" } }, "color": { "defaultValue": { value: "#001e3e" }, "description": "", "name": "color", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/common/components/CloseCircleSolidIcon.tsx#CloseCircleSolidIcon"] = { docgenInfo: CloseCircleSolidIcon.__docgenInfo, name: "CloseCircleSolidIcon", path: "src/common/components/CloseCircleSolidIcon.tsx#CloseCircleSolidIcon" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/common/components/CloseIcon.tsx":
/*!*********************************************!*\
  !*** ./src/common/components/CloseIcon.tsx ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CloseIcon: () => (/* binding */ CloseIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../colors */ "./src/common/colors.tsx");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");



const CloseIcon = props => {
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("svg", {
    color: _colors__WEBPACK_IMPORTED_MODULE_2__.AUTHENTIC_BLUE_900,
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ...props,
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path", {
      d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z",
      fill: "currentColor",
      fillRule: "nonzero"
    })
  });
};
CloseIcon.displayName = "CloseIcon";
try {
    // @ts-ignore
    CloseIcon.displayName = "CloseIcon";
    // @ts-ignore
    CloseIcon.__docgenInfo = { "description": "", "displayName": "CloseIcon", "props": { "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": true, "type": { "name": "() => void" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/common/components/CloseIcon.tsx#CloseIcon"] = { docgenInfo: CloseIcon.__docgenInfo, name: "CloseIcon", path: "src/common/components/CloseIcon.tsx#CloseIcon" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/common/components/Headline.tsx":
/*!********************************************!*\
  !*** ./src/common/components/Headline.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Headline: () => (/* binding */ Headline)
/* harmony export */ });
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../colors */ "./src/common/colors.tsx");


const Headline = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].h2`
    color: ${_colors__WEBPACK_IMPORTED_MODULE_1__.AUTHENTIC_BLUE_900};
    font-size: 32px;
    margin-bottom: 32px;
`;
try {
    // @ts-ignore
    Headline.displayName = "Headline";
    // @ts-ignore
    Headline.__docgenInfo = { "description": "", "displayName": "Headline", "props": { "ref": { "defaultValue": null, "description": "", "name": "ref", "required": false, "type": { "name": "((instance: HTMLHeadingElement | null) => void) | RefObject<HTMLHeadingElement> | null" } }, "theme": { "defaultValue": null, "description": "", "name": "theme", "required": false, "type": { "name": "any" } }, "as": { "defaultValue": null, "description": "", "name": "as", "required": false, "type": { "name": "undefined" } }, "forwardedAs": { "defaultValue": null, "description": "", "name": "forwardedAs", "required": false, "type": { "name": "undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/common/components/Headline.tsx#Headline"] = { docgenInfo: Headline.__docgenInfo, name: "Headline", path: "src/common/components/Headline.tsx#Headline" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/common/components/InfoCircleSolidIcon.tsx":
/*!*******************************************************!*\
  !*** ./src/common/components/InfoCircleSolidIcon.tsx ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InfoCircleSolidIcon: () => (/* binding */ InfoCircleSolidIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../colors */ "./src/common/colors.tsx");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");



const InfoCircleSolidIcon = ({
  color = _colors__WEBPACK_IMPORTED_MODULE_2__.AUTHENTIC_BLUE_900,
  ...props
}) => {
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("svg", {
    color: color,
    ...props,
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path", {
      d: "M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2zm1 8.4h-2v6h2v-6zm-1-3.6a1.2 1.2 0 100 2.4 1.2 1.2 0 000-2.4z",
      fill: "currentColor",
      fillRule: "nonzero"
    })
  });
};
InfoCircleSolidIcon.displayName = "InfoCircleSolidIcon";
try {
    // @ts-ignore
    InfoCircleSolidIcon.displayName = "InfoCircleSolidIcon";
    // @ts-ignore
    InfoCircleSolidIcon.__docgenInfo = { "description": "", "displayName": "InfoCircleSolidIcon", "props": { "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string" } }, "color": { "defaultValue": { value: "#001e3e" }, "description": "", "name": "color", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/common/components/InfoCircleSolidIcon.tsx#InfoCircleSolidIcon"] = { docgenInfo: InfoCircleSolidIcon.__docgenInfo, name: "InfoCircleSolidIcon", path: "src/common/components/InfoCircleSolidIcon.tsx#InfoCircleSolidIcon" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/common/components/Modal.tsx":
/*!*****************************************!*\
  !*** ./src/common/components/Modal.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Modal: () => (/* binding */ Modal),
/* harmony export */   useDismiss: () => (/* binding */ useDismiss)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../colors */ "./src/common/colors.tsx");
/* harmony import */ var _CloseIcon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CloseIcon */ "./src/common/components/CloseIcon.tsx");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");







const Dimming = styled_components__WEBPACK_IMPORTED_MODULE_3__["default"].div`
    background-color: ${_colors__WEBPACK_IMPORTED_MODULE_4__.AUTHENTIC_BLUE_1100};
    height: 100%;
    left: 0;
    opacity: 0.6;
    position: fixed;
    top: 0;
    width: 100%;
    z-index: 1000;
`;
const TopRightCloseIcon = (0,styled_components__WEBPACK_IMPORTED_MODULE_3__["default"])((0,_CloseIcon__WEBPACK_IMPORTED_MODULE_1__.CloseIcon))`
    position: absolute;
    top: 8px;
    right: 8px;
    cursor: pointer;
    z-index: 1050;
`;
const Card = styled_components__WEBPACK_IMPORTED_MODULE_3__["default"].div`
    background-color: white;
    border-radius: 4px;
    box-shadow: 0 0 6px 2px rgba(0, 0, 0, 0.12);
    box-sizing: border-box;
    left: 50%;
    max-height: calc(100% - 16px);
    overflow: auto;
    padding: 40px;
    position: fixed;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 630px;
    z-index: 1050;
`;
// tslint:disable-next-line: no-empty
const DismissContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createContext(() => {});
const useDismiss = () => (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(DismissContext);
const Modal = ({
  children,
  onClose
}) => {
  const dismiss = () => {
    // hook (not a react hook) used for animations
    onClose();
  };
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Dimming, {
      onClick: dismiss
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(Card, {
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(TopRightCloseIcon, {
        onClick: dismiss
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(DismissContext.Provider, {
        value: dismiss,
        children: children
      })]
    })]
  });
};
try {
    // @ts-ignore
    Modal.displayName = "Modal";
    // @ts-ignore
    Modal.__docgenInfo = { "description": "", "displayName": "Modal", "props": { "onClose": { "defaultValue": null, "description": "", "name": "onClose", "required": true, "type": { "name": "() => void" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/common/components/Modal.tsx#Modal"] = { docgenInfo: Modal.__docgenInfo, name: "Modal", path: "src/common/components/Modal.tsx#Modal" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/common/components/Select.tsx":
/*!******************************************!*\
  !*** ./src/common/components/Select.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Select: () => (/* binding */ Select)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../colors */ "./src/common/colors.tsx");
/* harmony import */ var _ChevronDownIcon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ChevronDownIcon */ "./src/common/components/ChevronDownIcon.tsx");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");






const Container = styled_components__WEBPACK_IMPORTED_MODULE_3__["default"].div`
    box-sizing: border-box;
    display: inline-block;
    margin-bottom: 16px;
    position: relative;
`;
const Label = styled_components__WEBPACK_IMPORTED_MODULE_3__["default"].label`
    background: white;
    color: ${_colors__WEBPACK_IMPORTED_MODULE_4__.AUTHENTIC_BLUE_550};
    font-size: 10px;
    left: 8px;
    transform: translateY(-50%);
    padding: 0 4px;
    position: absolute;
`;
const Input = styled_components__WEBPACK_IMPORTED_MODULE_3__["default"].select`
    appearance: none;
    background: white;
    border: 1px solid ${_colors__WEBPACK_IMPORTED_MODULE_4__.AUTHENTIC_BLUE_200};
    border-radius: 4px;
    box-sizing: border-box;
    font-size: 16px;
    height: 48px;
    margin: 0;
    padding: 12px;
    transition: box-shadow 100ms, border 100ms;
    outline: none;
    width: 100%;

    &:active,
    &:focus {
        border-color: ${_colors__WEBPACK_IMPORTED_MODULE_4__.ACTION_BLUE_900};
        box-shadow: inset 0 0 0 1px ${_colors__WEBPACK_IMPORTED_MODULE_4__.ACTION_BLUE_900};
    }
`;
const SelectIcon = (0,styled_components__WEBPACK_IMPORTED_MODULE_3__["default"])((0,_ChevronDownIcon__WEBPACK_IMPORTED_MODULE_1__.ChevronDownIcon))`
    pointer-events: none;
    position: absolute;
    right: 8px;
    top: 50%;
    transform: translateY(-50%);
`;

// FIXME: label is missing an active state, should be same color as border
const Select = ({
  children,
  id,
  label,
  ...props
}) => {
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(Container, {
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Label, {
      htmlFor: id,
      children: label
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Input, {
      id: id,
      ...props,
      children: children
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(SelectIcon, {})]
  });
};
Select.displayName = "Select";
try {
    // @ts-ignore
    Select.displayName = "Select";
    // @ts-ignore
    Select.__docgenInfo = { "description": "", "displayName": "Select", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": true, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/common/components/Select.tsx#Select"] = { docgenInfo: Select.__docgenInfo, name: "Select", path: "src/common/components/Select.tsx#Select" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/common/components/Text.tsx":
/*!****************************************!*\
  !*** ./src/common/components/Text.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Text: () => (/* binding */ Text)
/* harmony export */ });
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../colors */ "./src/common/colors.tsx");


const Text = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].p`
    color: ${({
  weak
}) => weak ? _colors__WEBPACK_IMPORTED_MODULE_1__.AUTHENTIC_BLUE_550 : _colors__WEBPACK_IMPORTED_MODULE_1__.AUTHENTIC_BLUE_1100};
    font-size: 14px;

    a,
    a:visited {
        color: ${_colors__WEBPACK_IMPORTED_MODULE_1__.ACTION_BLUE_900};
        font-weight: bold;
        text-decoration: none;
    }
`;
try {
    // @ts-ignore
    Text.displayName = "Text";
    // @ts-ignore
    Text.__docgenInfo = { "description": "", "displayName": "Text", "props": { "ref": { "defaultValue": null, "description": "", "name": "ref", "required": false, "type": { "name": "((instance: HTMLParagraphElement | null) => void) | RefObject<HTMLParagraphElement> | null" } }, "weak": { "defaultValue": null, "description": "", "name": "weak", "required": false, "type": { "name": "boolean" } }, "theme": { "defaultValue": null, "description": "", "name": "theme", "required": false, "type": { "name": "any" } }, "as": { "defaultValue": null, "description": "", "name": "as", "required": false, "type": { "name": "undefined" } }, "forwardedAs": { "defaultValue": null, "description": "", "name": "forwardedAs", "required": false, "type": { "name": "undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/common/components/Text.tsx#Text"] = { docgenInfo: Text.__docgenInfo, name: "Text", path: "src/common/components/Text.tsx#Text" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/common/components/Textarea.tsx":
/*!********************************************!*\
  !*** ./src/common/components/Textarea.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Textarea: () => (/* binding */ Textarea)
/* harmony export */ });
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../colors */ "./src/common/colors.tsx");


const Textarea = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].textarea`
    appearance: none;
    background: white;
    border: 1px solid ${_colors__WEBPACK_IMPORTED_MODULE_1__.AUTHENTIC_BLUE_200};
    border-radius: 4px;
    box-sizing: border-box;
    font-size: 16px;
    min-height: 200px;
    padding: 12px 12px 0;
    resize: none;
    transition: box-shadow 100ms, border 100ms;
    outline: none;
    white-space: pre;
    width: 100%;
`;
try {
    // @ts-ignore
    Textarea.displayName = "Textarea";
    // @ts-ignore
    Textarea.__docgenInfo = { "description": "", "displayName": "Textarea", "props": { "ref": { "defaultValue": null, "description": "", "name": "ref", "required": false, "type": { "name": "((instance: HTMLTextAreaElement | null) => void) | RefObject<HTMLTextAreaElement> | null" } }, "theme": { "defaultValue": null, "description": "", "name": "theme", "required": false, "type": { "name": "any" } }, "as": { "defaultValue": null, "description": "", "name": "as", "required": false, "type": { "name": "undefined" } }, "forwardedAs": { "defaultValue": null, "description": "", "name": "forwardedAs", "required": false, "type": { "name": "undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/common/components/Textarea.tsx#Textarea"] = { docgenInfo: Textarea.__docgenInfo, name: "Textarea", path: "src/common/components/Textarea.tsx#Textarea" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/common/helpers/prettyPrint.ts":
/*!*******************************************!*\
  !*** ./src/common/helpers/prettyPrint.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   prettyPrint: () => (/* binding */ prettyPrint)
/* harmony export */ });
// tslint:disable-next-line: no-any
const prettyPrint = value => JSON.stringify(value, null, 2);

/***/ }),

/***/ "./src/conversion/ExportPolygonForm.tsx":
/*!**********************************************!*\
  !*** ./src/conversion/ExportPolygonForm.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExportPolygonForm: () => (/* binding */ ExportPolygonForm)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _ActionBar_Icons_Export__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ActionBar/Icons/Export */ "./src/ActionBar/Icons/Export.tsx");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _common_components_ButtonGroup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/components/ButtonGroup */ "./src/common/components/ButtonGroup.tsx");
/* harmony import */ var _common_components_Headline__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/components/Headline */ "./src/common/components/Headline.tsx");
/* harmony import */ var _common_components_Modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/components/Modal */ "./src/common/components/Modal.tsx");
/* harmony import */ var _common_components_Select__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/components/Select */ "./src/common/components/Select.tsx");
/* harmony import */ var _common_components_Textarea__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/components/Textarea */ "./src/common/components/Textarea.tsx");
/* harmony import */ var _common_components_Text__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common/components/Text */ "./src/common/components/Text.tsx");
/* harmony import */ var _common_colors__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../common/colors */ "./src/common/colors.tsx");
/* harmony import */ var _format__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./format */ "./src/conversion/format/index.ts");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");














const Form = styled_components__WEBPACK_IMPORTED_MODULE_11__["default"].form`
    display: flex;
    flex-direction: column;
`;
const Description = (0,styled_components__WEBPACK_IMPORTED_MODULE_11__["default"])((0,_common_components_Text__WEBPACK_IMPORTED_MODULE_8__.Text)).attrs(() => ({
  weak: true
}))`
    margin-bottom: 24px;
`;
const rippleAnimation = (0,styled_components__WEBPACK_IMPORTED_MODULE_11__.keyframes)`
    0% {
        opacity: 0.6;
    }
    50% {
        opacity: 0.4;
    }
    100% {
        opacity: 0.6;
    }
`;
const CopyOverlay = styled_components__WEBPACK_IMPORTED_MODULE_11__["default"].div`
    align-items: center;
    background-color: ${_common_colors__WEBPACK_IMPORTED_MODULE_12__.AUTHENTIC_BLUE_1100};
    border-radius: 4px;
    cursor: pointer;
    display: flex;
    flex-direction: column;
    height: 200px;
    justify-content: center;
    margin-bottom: calc(24px - 200px);
    position: relative;
    opacity: 0;
    top: -200px;
    transition: opacity 0.1s linear;

    ${({
  isActive
}) => isActive ? (0,styled_components__WEBPACK_IMPORTED_MODULE_11__.css)`
                  animation: ${rippleAnimation} 0.4s ease-out;
              ` : ''}

    &:hover {
        background-color: ${_common_colors__WEBPACK_IMPORTED_MODULE_12__.AUTHENTIC_BLUE_1100};
        opacity: 0.6;
    }
`;
const CopyOverlayLabel = styled_components__WEBPACK_IMPORTED_MODULE_11__["default"].p`
    color: ${_common_colors__WEBPACK_IMPORTED_MODULE_12__.WHITE};
    font-size: 16px;
`;
const CopyTextarea = (0,styled_components__WEBPACK_IMPORTED_MODULE_11__["default"])((0,_common_components_Textarea__WEBPACK_IMPORTED_MODULE_7__.Textarea))`
    height: 200px;
    z-index: -1;
`;
const ExportPolygonForm = ({
  polygon,
  onSubmit
}) => {
  const [copyButtonClicked, setCopyButtonClicked] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [copyOverlayIsActive, setCopyOverlayIsActive] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [copyOverlayClicked, setCopyOverlayClicked] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const dismiss = (0,_common_components_Modal__WEBPACK_IMPORTED_MODULE_5__.useDismiss)();
  const [outputFormat, setOutputFormat] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_format__WEBPACK_IMPORTED_MODULE_9__.format.geojson);
  const value = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => outputFormat.serialize(polygon), [polygon, outputFormat.serialize]);
  const handleOutputFormatChanged = e => {
    const selectedValue = e.target.value;
    setOutputFormat(_format__WEBPACK_IMPORTED_MODULE_9__.format[selectedValue]);
  };
  const handleCopyOverlayClicked = () => {
    if (!copyOverlayClicked) {
      setCopyOverlayIsActive(true);
      setCopyOverlayClicked(true);
      setTimeout(() => setCopyOverlayClicked(false), 1000);
      onSubmit(value);
    }
  };
  const handleOnSubmit = e => {
    e.preventDefault();
    if (!copyButtonClicked) {
      setCopyButtonClicked(true);
      setTimeout(() => setCopyButtonClicked(false), 1000);
    }
    onSubmit(value);
  };
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxs)(Form, {
    onSubmit: handleOnSubmit,
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)(_common_components_Headline__WEBPACK_IMPORTED_MODULE_4__.Headline, {
      children: "Export Polygon"
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)(_common_components_Select__WEBPACK_IMPORTED_MODULE_6__.Select, {
      id: "fn-export-format-select",
      label: "Export format",
      value: outputFormat.name,
      onChange: handleOutputFormatChanged,
      children: Object.values(_format__WEBPACK_IMPORTED_MODULE_9__.format).map(f => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)("option", {
        value: f.name,
        children: f.displayName
      }, f.name))
    }), outputFormat.description && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)(Description, {
      dangerouslySetInnerHTML: {
        __html: outputFormat.description
      }
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)(CopyTextarea, {
      value: value,
      readOnly: true
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxs)(CopyOverlay, {
      isActive: copyOverlayIsActive,
      onClick: handleCopyOverlayClicked,
      onAnimationEnd: () => setCopyOverlayIsActive(false),
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)(_ActionBar_Icons_Export__WEBPACK_IMPORTED_MODULE_1__.Export, {
        iconColor: _common_colors__WEBPACK_IMPORTED_MODULE_12__.WHITE,
        height: 48,
        width: 48
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)(CopyOverlayLabel, {
        children: copyOverlayClicked ? 'Copied!' : 'Copy to clipboard'
      })]
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxs)(_common_components_ButtonGroup__WEBPACK_IMPORTED_MODULE_3__.ButtonGroup, {
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)(_common_components_Button__WEBPACK_IMPORTED_MODULE_2__.Button, {
        children: copyButtonClicked ? 'Copied!' : 'Copy code'
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)(_common_components_Button__WEBPACK_IMPORTED_MODULE_2__.Button, {
        type: "button",
        secondary: true,
        onClick: dismiss,
        children: "Close"
      })]
    })]
  });
};
ExportPolygonForm.displayName = "ExportPolygonForm";
try {
    // @ts-ignore
    ExportPolygonForm.displayName = "ExportPolygonForm";
    // @ts-ignore
    ExportPolygonForm.__docgenInfo = { "description": "", "displayName": "ExportPolygonForm", "props": { "polygon": { "defaultValue": null, "description": "", "name": "polygon", "required": true, "type": { "name": "Coordinate[]" } }, "onSubmit": { "defaultValue": null, "description": "", "name": "onSubmit", "required": true, "type": { "name": "(value: string) => void" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/conversion/ExportPolygonForm.tsx#ExportPolygonForm"] = { docgenInfo: ExportPolygonForm.__docgenInfo, name: "ExportPolygonForm", path: "src/conversion/ExportPolygonForm.tsx#ExportPolygonForm" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/conversion/ImportPolygonForm.tsx":
/*!**********************************************!*\
  !*** ./src/conversion/ImportPolygonForm.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ImportPolygonForm: () => (/* binding */ ImportPolygonForm)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _common_components_ButtonGroup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/components/ButtonGroup */ "./src/common/components/ButtonGroup.tsx");
/* harmony import */ var _common_components_Headline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/components/Headline */ "./src/common/components/Headline.tsx");
/* harmony import */ var _common_components_Textarea__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/components/Textarea */ "./src/common/components/Textarea.tsx");
/* harmony import */ var _common_components_Modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/components/Modal */ "./src/common/components/Modal.tsx");
/* harmony import */ var _ImportPolygonStatus__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ImportPolygonStatus */ "./src/conversion/ImportPolygonStatus.tsx");
/* harmony import */ var _useDeserialize__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./useDeserialize */ "./src/conversion/useDeserialize.tsx");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");











const Form = styled_components__WEBPACK_IMPORTED_MODULE_9__["default"].form`
    display: flex;
    flex-direction: column;
`;
const StyledTextarea = (0,styled_components__WEBPACK_IMPORTED_MODULE_9__["default"])((0,_common_components_Textarea__WEBPACK_IMPORTED_MODULE_4__.Textarea))`
    margin-bottom: 24px;
`;
const ImportPolygonForm = ({
  onSubmit = () => {}
}) => {
  const dismiss = (0,_common_components_Modal__WEBPACK_IMPORTED_MODULE_5__.useDismiss)();
  const [text, setText] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_ImportPolygonStatus__WEBPACK_IMPORTED_MODULE_6__.Status.EMPTY);
  const deserialized = (0,_useDeserialize__WEBPACK_IMPORTED_MODULE_7__.useDeserialize)(text);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (text === '') {
      setStatus(_ImportPolygonStatus__WEBPACK_IMPORTED_MODULE_6__.Status.EMPTY);
      return;
    }
    if (deserialized.valid) {
      setStatus(_ImportPolygonStatus__WEBPACK_IMPORTED_MODULE_6__.Status.VALID);
      return;
    }
    setStatus(_ImportPolygonStatus__WEBPACK_IMPORTED_MODULE_6__.Status.INVALID);
  }, [text]);
  const handleOnSubmit = e => {
    e.preventDefault();
    if (deserialized.valid) {
      onSubmit(deserialized.coordinates);
      dismiss();
    }
  };
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(Form, {
    onSubmit: handleOnSubmit,
    name: "Import Polygon",
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_common_components_Headline__WEBPACK_IMPORTED_MODULE_3__.Headline, {
      children: "Import Polygon"
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_ImportPolygonStatus__WEBPACK_IMPORTED_MODULE_6__.ImportPolygonStatus, {
      status: status
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(StyledTextarea, {
      placeholder: "Insert code here",
      value: text,
      onChange: e => setText(e.target.value)
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(_common_components_ButtonGroup__WEBPACK_IMPORTED_MODULE_2__.ButtonGroup, {
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_common_components_Button__WEBPACK_IMPORTED_MODULE_1__.Button, {
        type: "submit",
        disabled: !deserialized.valid,
        children: "Import"
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_common_components_Button__WEBPACK_IMPORTED_MODULE_1__.Button, {
        type: "button",
        secondary: true,
        onClick: dismiss,
        children: "Close"
      })]
    })]
  });
};
ImportPolygonForm.displayName = "ImportPolygonForm";
try {
    // @ts-ignore
    ImportPolygonForm.displayName = "ImportPolygonForm";
    // @ts-ignore
    ImportPolygonForm.__docgenInfo = { "description": "", "displayName": "ImportPolygonForm", "props": { "onSubmit": { "defaultValue": { value: "() => {}" }, "description": "", "name": "onSubmit", "required": false, "type": { "name": "((coordinates: Coordinate[]) => void)" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/conversion/ImportPolygonForm.tsx#ImportPolygonForm"] = { docgenInfo: ImportPolygonForm.__docgenInfo, name: "ImportPolygonForm", path: "src/conversion/ImportPolygonForm.tsx#ImportPolygonForm" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/conversion/ImportPolygonStatus.tsx":
/*!************************************************!*\
  !*** ./src/conversion/ImportPolygonStatus.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ImportPolygonStatus: () => (/* binding */ ImportPolygonStatus),
/* harmony export */   Status: () => (/* binding */ Status)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _common_colors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/colors */ "./src/common/colors.tsx");
/* harmony import */ var _common_components_CheckCircleSolidIcon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/components/CheckCircleSolidIcon */ "./src/common/components/CheckCircleSolidIcon.tsx");
/* harmony import */ var _common_components_CloseCircleSolidIcon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/components/CloseCircleSolidIcon */ "./src/common/components/CloseCircleSolidIcon.tsx");
/* harmony import */ var _common_components_InfoCircleSolidIcon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/components/InfoCircleSolidIcon */ "./src/common/components/InfoCircleSolidIcon.tsx");
/* harmony import */ var _common_components_Text__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/components/Text */ "./src/common/components/Text.tsx");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");









let Status = /*#__PURE__*/function (Status) {
  Status[Status["EMPTY"] = 0] = "EMPTY";
  Status[Status["VALID"] = 1] = "VALID";
  Status[Status["INVALID"] = 2] = "INVALID";
  return Status;
}({});
const Container = styled_components__WEBPACK_IMPORTED_MODULE_6__["default"].div`
    background-color: ${({
  status
}) => {
  switch (status) {
    case Status.EMPTY:
      return _common_colors__WEBPACK_IMPORTED_MODULE_7__.AUTHENTIC_BLUE_50;
    case Status.VALID:
      return _common_colors__WEBPACK_IMPORTED_MODULE_7__.POSITIVE_GREEN_50;
    case Status.INVALID:
      return _common_colors__WEBPACK_IMPORTED_MODULE_7__.NEGATIVE_ORANGE_50;
  }
}};
    border-radius: 8px;
    display: flex;
    margin-bottom: 24px;
    padding: 8px;
`;
const ContentWrapper = styled_components__WEBPACK_IMPORTED_MODULE_6__["default"].div`
    margin-left: 8px;
`;
const Title = (0,styled_components__WEBPACK_IMPORTED_MODULE_6__["default"])((0,_common_components_Text__WEBPACK_IMPORTED_MODULE_4__.Text))`
    font-weight: bold;
`;
const Description = (0,styled_components__WEBPACK_IMPORTED_MODULE_6__["default"])((0,_common_components_Text__WEBPACK_IMPORTED_MODULE_4__.Text))`
    font-size: 12px;
`;
const ImportPolygonStatus = ({
  status
}) => {
  let data;
  switch (status) {
    case Status.EMPTY:
      {
        data = {
          title: 'Enter polygon coordinates',
          description: 'Only GeoJSON is supported at the moment.',
          icon: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_common_components_InfoCircleSolidIcon__WEBPACK_IMPORTED_MODULE_3__.InfoCircleSolidIcon, {
            color: _common_colors__WEBPACK_IMPORTED_MODULE_7__.ACTION_BLUE_900
          })
        };
        break;
      }
    case Status.VALID:
      {
        data = {
          title: 'Format detected',
          description: 'GeoJSON. Valid data.',
          icon: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_common_components_CheckCircleSolidIcon__WEBPACK_IMPORTED_MODULE_1__.CheckCircleSolidIcon, {
            color: _common_colors__WEBPACK_IMPORTED_MODULE_7__.POSITIVE_GREEN_900
          })
        };
        break;
      }
    case Status.INVALID:
      {
        data = {
          title: 'Invalid format',
          description: 'Please make sure that the entered polygon is valid GeoJSON.',
          icon: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_common_components_CloseCircleSolidIcon__WEBPACK_IMPORTED_MODULE_2__.CloseCircleSolidIcon, {
            color: _common_colors__WEBPACK_IMPORTED_MODULE_7__.NEGATIVE_ORANGE_900
          })
        };
        break;
      }
  }
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(Container, {
    status: status,
    children: [data.icon, /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(ContentWrapper, {
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(Title, {
        children: data.title
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(Description, {
        children: data.description
      })]
    })]
  });
};
ImportPolygonStatus.displayName = "ImportPolygonStatus";
try {
    // @ts-ignore
    ImportPolygonStatus.displayName = "ImportPolygonStatus";
    // @ts-ignore
    ImportPolygonStatus.__docgenInfo = { "description": "", "displayName": "ImportPolygonStatus", "props": { "status": { "defaultValue": null, "description": "", "name": "status", "required": true, "type": { "name": "enum", "value": [{ "value": "0" }, { "value": "1" }, { "value": "2" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/conversion/ImportPolygonStatus.tsx#ImportPolygonStatus"] = { docgenInfo: ImportPolygonStatus.__docgenInfo, name: "ImportPolygonStatus", path: "src/conversion/ImportPolygonStatus.tsx#ImportPolygonStatus" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/conversion/format/geojson.ts":
/*!******************************************!*\
  !*** ./src/conversion/format/geojson.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   geojson: () => (/* binding */ geojson)
/* harmony export */ });
/* harmony import */ var _mapbox_geojson_rewind__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mapbox/geojson-rewind */ "./node_modules/@mapbox/geojson-rewind/index.js");
/* harmony import */ var _mapbox_geojson_rewind__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mapbox_geojson_rewind__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mapbox_geojsonhint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mapbox/geojsonhint */ "./node_modules/@mapbox/geojsonhint/lib/index.js");
/* harmony import */ var _common_helpers_prettyPrint__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/helpers/prettyPrint */ "./src/common/helpers/prettyPrint.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ "./src/conversion/format/types.ts");




const serialize = coordinates => {
  const geoJSON = {
    type: 'FeatureCollection',
    features: [{
      type: 'Feature',
      properties: {},
      geometry: {
        type: 'Polygon',
        coordinates: [coordinates.map(({
          longitude,
          latitude
        }) => [longitude, latitude])]
      }
    }]
  };
  return (0,_common_helpers_prettyPrint__WEBPACK_IMPORTED_MODULE_3__.prettyPrint)(geoJSON);
};
const ALLOWED_GEOJSON_GEOMETRY_TYPES = ['Polygon'];
const ALLOWED_GEOJSON_TYPES = ['FeatureCollection', 'Feature', ...ALLOWED_GEOJSON_GEOMETRY_TYPES];
const getErrors = value => {
  return _mapbox_geojsonhint__WEBPACK_IMPORTED_MODULE_1__.hint(value, {
    precisionWarning: false
  });
};
const acceptGeoJSON = value => {
  return getErrors(_mapbox_geojson_rewind__WEBPACK_IMPORTED_MODULE_0___default()(value)).length === 0;
};
const getCoordinatesFromPolygon = polygon => {
  return polygon.coordinates[0].map(([longitude, latitude]) => ({
    longitude,
    latitude
  }));
};
const deserialize = raw => {
  const parsed = JSON.parse(raw);
  if (!acceptGeoJSON(parsed)) {
    throw new Error(`Invalid GeoJSON detected:\n${getErrors(parsed).map(error => `- ${error.message}\n`)}`);
  }
  switch (parsed.type) {
    case 'Feature':
      {
        const geometry = parsed.geometry;
        if (geometry.type !== 'Polygon') {
          throw new Error(`Geometry type ${geometry.type} is not supported, must be one of ${ALLOWED_GEOJSON_GEOMETRY_TYPES}`);
        }
        return getCoordinatesFromPolygon(geometry);
      }
    case 'FeatureCollection':
      {
        const geometry = parsed.features[0].geometry;
        if (geometry.type !== 'Polygon') {
          throw new Error(`Geometry type ${geometry.type} is not supported, must be one of ${ALLOWED_GEOJSON_GEOMETRY_TYPES}`);
        }
        return getCoordinatesFromPolygon(geometry);
      }
    case 'Polygon':
      {
        const polygon = parsed;
        return getCoordinatesFromPolygon(polygon);
      }
    default:
      {
        throw new Error(`Type ${parsed.type} is not supported, must be one of ${ALLOWED_GEOJSON_TYPES}`);
      }
  }
};
const validate = raw => {
  try {
    deserialize(raw);
    return true;
  } catch (e) {
    return false;
  }
};
const geojson = {
  name: _types__WEBPACK_IMPORTED_MODULE_2__.FormatType.GEOJSON,
  displayName: 'GeoJSON',
  description: `GeoJSON is a format for encoding a variety of geographic data structures. <a href="https://geojson.org/" target="_blank">More info</a>`,
  serialize,
  deserialize,
  validate
};

/***/ }),

/***/ "./src/conversion/format/index.ts":
/*!****************************************!*\
  !*** ./src/conversion/format/index.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   format: () => (/* binding */ format)
/* harmony export */ });
/* harmony import */ var _geojson__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./geojson */ "./src/conversion/format/geojson.ts");
/* harmony import */ var _jts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jts */ "./src/conversion/format/jts.ts");
/* harmony import */ var _latlng__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./latlng */ "./src/conversion/format/latlng.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types */ "./src/conversion/format/types.ts");




const format = {
  [_types__WEBPACK_IMPORTED_MODULE_3__.FormatType.GEOJSON]: _geojson__WEBPACK_IMPORTED_MODULE_0__.geojson,
  [_types__WEBPACK_IMPORTED_MODULE_3__.FormatType.JTS]: _jts__WEBPACK_IMPORTED_MODULE_1__.jts,
  [_types__WEBPACK_IMPORTED_MODULE_3__.FormatType.LATLNG]: _latlng__WEBPACK_IMPORTED_MODULE_2__.latlng
};

/***/ }),

/***/ "./src/conversion/format/jts.ts":
/*!**************************************!*\
  !*** ./src/conversion/format/jts.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   jts: () => (/* binding */ jts)
/* harmony export */ });
/* harmony import */ var _common_helpers_prettyPrint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/helpers/prettyPrint */ "./src/common/helpers/prettyPrint.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ "./src/conversion/format/types.ts");


const jts = {
  name: _types__WEBPACK_IMPORTED_MODULE_0__.FormatType.JTS,
  displayName: 'JTS',
  serialize: coordinates => {
    return (0,_common_helpers_prettyPrint__WEBPACK_IMPORTED_MODULE_1__.prettyPrint)(coordinates.map(({
      longitude,
      latitude
    }) => [longitude, latitude]));
  },
  deserialize: raw => {
    throw new Error('not implemented');
  },
  validate: raw => {
    throw new Error('not implemented');
  }
};

/***/ }),

/***/ "./src/conversion/format/latlng.ts":
/*!*****************************************!*\
  !*** ./src/conversion/format/latlng.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   latlng: () => (/* binding */ latlng)
/* harmony export */ });
/* harmony import */ var _common_helpers_prettyPrint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/helpers/prettyPrint */ "./src/common/helpers/prettyPrint.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ "./src/conversion/format/types.ts");


const latlng = {
  name: _types__WEBPACK_IMPORTED_MODULE_0__.FormatType.LATLNG,
  displayName: 'LatLng',
  serialize: coordinates => {
    return (0,_common_helpers_prettyPrint__WEBPACK_IMPORTED_MODULE_1__.prettyPrint)(coordinates);
  },
  deserialize: raw => {
    throw new Error('not implemented');
  },
  validate: raw => {
    throw new Error('not implemented');
  }
};

/***/ }),

/***/ "./src/conversion/format/types.ts":
/*!****************************************!*\
  !*** ./src/conversion/format/types.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FormatType: () => (/* binding */ FormatType)
/* harmony export */ });
let FormatType = /*#__PURE__*/function (FormatType) {
  FormatType["GEOJSON"] = "geojson";
  FormatType["LATLNG"] = "latlng";
  FormatType["JTS"] = "jts";
  return FormatType;
}({});

/***/ }),

/***/ "./src/conversion/useDeserialize.tsx":
/*!*******************************************!*\
  !*** ./src/conversion/useDeserialize.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useDeserialize: () => (/* binding */ useDeserialize)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./format */ "./src/conversion/format/index.ts");


const useDeserialize = raw => {
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    // the only format that is currently supported is GeoJSON
    const detectedFormat = _format__WEBPACK_IMPORTED_MODULE_1__.format.geojson;
    return detectedFormat.validate(raw) ? {
      valid: true,
      coordinates: detectedFormat.deserialize(raw)
    } : {
      valid: false
    };
  }, [raw]);
};
try {
    // @ts-ignore
    useDeserialize.displayName = "useDeserialize";
    // @ts-ignore
    useDeserialize.__docgenInfo = { "description": "", "displayName": "useDeserialize", "props": {} };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/conversion/useDeserialize.tsx#useDeserialize"] = { docgenInfo: useDeserialize.__docgenInfo, name: "useDeserialize", path: "src/conversion/useDeserialize.tsx#useDeserialize" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/leaflet/Map.tsx":
/*!*****************************!*\
  !*** ./src/leaflet/Map.tsx ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Container: () => (/* binding */ Container),
/* harmony export */   Map: () => (/* binding */ Map)
/* harmony export */ });
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var react_leaflet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-leaflet */ "./node_modules/react-leaflet/lib/MapContainer.js");


const Map = (0,styled_components__WEBPACK_IMPORTED_MODULE_0__["default"])((0,react_leaflet__WEBPACK_IMPORTED_MODULE_1__.MapContainer))`
    height: 100%;
    width: 100%;
    z-index: 0;

    cursor: ${({
  drawCursor
}) => drawCursor ? 'crosshair !important' : 'auto'};
`;
const Container = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].div`
    position: relative;
    height: 100%;
    width: 100%;
`;
try {
    // @ts-ignore
    Map.displayName = "Map";
    // @ts-ignore
    Map.__docgenInfo = { "description": "", "displayName": "Map", "props": { "drawCursor": { "defaultValue": null, "description": "", "name": "drawCursor", "required": true, "type": { "name": "boolean" } }, "theme": { "defaultValue": null, "description": "", "name": "theme", "required": false, "type": { "name": "any" } }, "as": { "defaultValue": null, "description": "", "name": "as", "required": false, "type": { "name": "undefined" } }, "forwardedAs": { "defaultValue": null, "description": "", "name": "forwardedAs", "required": false, "type": { "name": "undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/leaflet/Map.tsx#Map"] = { docgenInfo: Map.__docgenInfo, name: "Map", path: "src/leaflet/Map.tsx#Map" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    Container.displayName = "Container";
    // @ts-ignore
    Container.__docgenInfo = { "description": "", "displayName": "Container", "props": { "ref": { "defaultValue": null, "description": "", "name": "ref", "required": false, "type": { "name": "((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null" } }, "theme": { "defaultValue": null, "description": "", "name": "theme", "required": false, "type": { "name": "any" } }, "as": { "defaultValue": null, "description": "", "name": "as", "required": false, "type": { "name": "undefined" } }, "forwardedAs": { "defaultValue": null, "description": "", "name": "forwardedAs", "required": false, "type": { "name": "undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/leaflet/Map.tsx#Container"] = { docgenInfo: Container.__docgenInfo, name: "Container", path: "src/leaflet/Map.tsx#Container" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "?32db":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?bd51":
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ })

});
//# sourceMappingURL=PolygonDraw-stories.bbfe9b03493fa208e72b.hot-update.js.map